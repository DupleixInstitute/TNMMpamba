<html>

<head>
    <script>
        
		
		function RecalculateFinancialAnalysisWeights(elem)
		{
           if (isNaN(elem.value))
		   {
		     alert ("Please enter numbers only");
			 elem.value =""; 
		   }
           else
		   {
		      var LiquidityCategoryWeight = Number(document.forms["FinancialAnalysisForm"]["LiquidityCategoryWeight"].value);
		      var ProfitabilityCategoryWeight = Number(document.forms["FinancialAnalysisForm"]["ProfitabilityCategoryWeight"].value);
		      var CapitalStructureCategoryWeight = Number(document.forms["FinancialAnalysisForm"]["CapitalStructureCategoryWeight"].value);
		 	  var TotalFinancialAnalysisRatiosInputsOnly = LiquidityCategoryWeight + ProfitabilityCategoryWeight + CapitalStructureCategoryWeight;
		      var Balancing = 100 - TotalFinancialAnalysisRatiosInputsOnly;
	
			  //
			  
			  
			  if (TotalFinancialAnalysisRatiosInputsOnly > 100)
		      {
		         alert("Total score may not exceed 100%");
				 elem.value = "";
				 
		      }
              else  
			    // Display Total Score;
			  {
			    document.forms["FinancialAnalysisForm"]["DebtServiceCategoryWeight"].value =Balancing;  
                //document.forms["FinancialAnalysisForm"]["bfFinancialAnalysisScore"].value = bfTotalScore * bfFinancialAnalysis / 100;
                //document.forms["FinancialAnalysisForm"]["bfManagementAnalysisScore"].value = bfTotalScore * bfManagementAnalysis / 100;
		        //document.forms["FinancialAnalysisForm"]["bfIndustryAnalysisScore"].value = bfTotalScore * bfIndustryAnalysis / 100;
				//document.forms["FinancialAnalysisForm"]["bfShareholderAnalysisScore"].value = bfTotalScore * bfShareholderAnalysis / 100;
				//document.forms["FinancialAnalysisForm"]["bfShareholderAnalysisScore"].value = bfTotalScore * bfShareholderAnalysis / 100;
	    		//document.forms["FinancialAnalysisForm"]["bfShareholderAnalysisScore"].value = bfTotalScore * bfShareholderAnalysis / 100;
	    		//document.forms["FinancialAnalysisForm"]["bfShareholderAnalysisScore"].value = bfTotalScore * bfShareholderAnalysis / 100;
	    		//document.forms["FinancialAnalysisForm"]["bfShareholderAnalysisScore"].value = bfTotalScore * bfShareholderAnalysis / 100;
	    		//document.forms["FinancialAnalysisForm"]["bfShareholderAnalysisScore"].value = bfTotalScore * bfShareholderAnalysis / 100;
	            // Updata Small Firms Total Score = Big Firm Total Score
				//if (elem.name=="bfTotalScore")
				//{
				//  document.forms["FinancialAnalysisForm"]["sfTotalScore"].value = elem.value;
	            //}
				//document.forms["FinancialAnalysisForm"]["bfEstablishmentAnalysisScore"].value = bfTotalScore * bfEstablishmentAnalysis / 100;
			    //document.forms["FinancialAnalysisForm"]["bfEstablishmentAnalysisPercentage"].value = bfBalancing;
			  }
			}
		}
		
		function RecalculateLiquidityRatios(elem)
		{
           if (isNaN(elem.value))
		   {
		     alert ("Please enter numbers only");
			 elem.value =""; 
		   }
           else
		   {
		      var CurrentRatioWeight = Number(document.forms["FinancialAnalysisForm"]["CurrentRatioWeight"].value);
		      var DebtorDaysWeight = Number(document.forms["FinancialAnalysisForm"]["DebtorDaysWeight"].value);
		      var TurnoverToWorkingCapitalWeight = Number(document.forms["FinancialAnalysisForm"]["TurnoverToWorkingCapitalWeight"].value);
		 	  var TotalLiquityRatiosInputsOnly = CurrentRatioWeight + DebtorDaysWeight;
		      var Balancing = 100 - TotalLiquityRatiosInputsOnly;
			  
			  
			  
			  if (TotalLiquityRatiosInputsOnly > 100)
		      {
		         alert("Total score may not exceed 100%");
				 elem.value = "";
				 
		      }
              else  
			    // Display Total Score;
			  {
			    document.forms["FinancialAnalysisForm"]["TurnoverToWorkingCapitalWeight"].value =Balancing;  
                //document.forms["FinancialAnalysisForm"]["bfFinancialAnalysisScore"].value = bfTotalScore * bfFinancialAnalysis / 100;
                //document.forms["FinancialAnalysisForm"]["bfManagementAnalysisScore"].value = bfTotalScore * bfManagementAnalysis / 100;
		        //document.forms["FinancialAnalysisForm"]["bfIndustryAnalysisScore"].value = bfTotalScore * bfIndustryAnalysis / 100;
				//document.forms["FinancialAnalysisForm"]["bfShareholderAnalysisScore"].value = bfTotalScore * bfShareholderAnalysis / 100;
				//document.forms["FinancialAnalysisForm"]["bfShareholderAnalysisScore"].value = bfTotalScore * bfShareholderAnalysis / 100;
	    		//document.forms["FinancialAnalysisForm"]["bfShareholderAnalysisScore"].value = bfTotalScore * bfShareholderAnalysis / 100;
	    		//document.forms["FinancialAnalysisForm"]["bfShareholderAnalysisScore"].value = bfTotalScore * bfShareholderAnalysis / 100;
	    		//document.forms["FinancialAnalysisForm"]["bfShareholderAnalysisScore"].value = bfTotalScore * bfShareholderAnalysis / 100;
	    		//document.forms["FinancialAnalysisForm"]["bfShareholderAnalysisScore"].value = bfTotalScore * bfShareholderAnalysis / 100;
	            // Updata Small Firms Total Score = Big Firm Total Score
				//if (elem.name=="bfTotalScore")
				//{
				//  document.forms["FinancialAnalysisForm"]["sfTotalScore"].value = elem.value;
	            //}
				//document.forms["FinancialAnalysisForm"]["bfEstablishmentAnalysisScore"].value = bfTotalScore * bfEstablishmentAnalysis / 100;
			    //document.forms["FinancialAnalysisForm"]["bfEstablishmentAnalysisPercentage"].value = bfBalancing;
			  }
			}
		}
        function RecalculateProfitabilityRatios(elem)
		{
           if (isNaN(elem.value))
		   {
		     alert ("Please enter numbers only");
			 elem.value =""; 
		   }
           else
		   {
		      var GrossProfitMarginWeight = Number(document.forms["FinancialAnalysisForm"]["GrossProfitMarginWeight"].value);
		      var OperatingProfitMarginWeight = Number(document.forms["FinancialAnalysisForm"]["OperatingProfitMarginWeight"].value);
		      var TurnoverGrowthWeight = Number(document.forms["FinancialAnalysisForm"]["TurnoverGrowthWeight"].value);
		      var ReturnOnAssetsWeight = Number(document.forms["FinancialAnalysisForm"]["ReturnOnAssetsWeight"].value);
		 	  var TotalProfitabilityRatiosInputsOnly = GrossProfitMarginWeight + OperatingProfitMarginWeight + TurnoverGrowthWeight + ReturnOnAssetsWeight;
		      var Balancing = 100 - TotalProfitabilityRatiosInputsOnly;
			  
			  
			  
			  if (TotalProfitabilityRatiosInputsOnly > 100)
		      {
		         alert("Total score may not exceed 100%");
				 elem.value = "";
				 
		      }
              else  
			    // Display Total Score;
			  {
			    document.forms["FinancialAnalysisForm"]["ReturnOnInvestmentsWeight"].value =Balancing;  
                //document.forms["FinancialAnalysisForm"]["bfFinancialAnalysisScore"].value = bfTotalScore * bfFinancialAnalysis / 100;
                //document.forms["FinancialAnalysisForm"]["bfManagementAna lysisScore"].value = bfTotalScore * bfManagementAnalysis / 100;
		        //document.forms["FinancialAnalysisForm"]["bfIndustryAnalysisScore"].value = bfTotalScore * bfIndustryAnalysis / 100;
				//document.forms["FinancialAnalysisForm"]["bfShareholderAnalysisScore"].value = bfTotalScore * bfShareholderAnalysis / 100;
				//document.forms["FinancialAnalysisForm"]["bfShareholderAnalysisScore"].value = bfTotalScore * bfShareholderAnalysis / 100;
	    		//document.forms["FinancialAnalysisForm"]["bfShareholderAnalysisScore"].value = bfTotalScore * bfShareholderAnalysis / 100;
	    		//document.forms["FinancialAnalysisForm"]["bfShareholderAnalysisScore"].value = bfTotalScore * bfShareholderAnalysis / 100;
	    		//document.forms["FinancialAnalysisForm"]["bfShareholderAnalysisScore"].value = bfTotalScore * bfShareholderAnalysis / 100;
	    		//document.forms["FinancialAnalysisForm"]["bfShareholderAnalysisScore"].value = bfTotalScore * bfShareholderAnalysis / 100;
	            // Updata Small Firms Total Score = Big Firm Total Score
				//if (elem.name=="bfTotalScore")
				//{
				//  document.forms["FinancialAnalysisForm"]["sfTotalScore"].value = elem.value;
	            //}
				//document.forms["FinancialAnalysisForm"]["bfEstablishmentAnalysisScore"].value = bfTotalScore * bfEstablishmentAnalysis / 100;
			    //document.forms["FinancialAnalysisForm"]["bfEstablishmentAnalysisPercentage"].value = bfBalancing;
			  }
			}
		}
		function RecalculateCapitalStructureRatios(elem)
		{
           if (isNaN(elem.value))
		   {
		     alert ("Please enter numbers only");
			 elem.value =""; 
		   }
           else
		   {
		      var DebtToEquityWeight = Number(document.forms["FinancialAnalysisForm"]["DebtToEquityWeight"].value);
		      var DebtToTangibleNetWorthWeight = Number(document.forms["FinancialAnalysisForm"]["DebtToTangibleNetWorthWeight"].value);
		 	  var TotalCapitalStructureRatiosInputsOnly = DebtToEquityWeight + DebtToTangibleNetWorthWeight;
		      var Balancing = 100 - TotalCapitalStructureRatiosInputsOnly;
			  
			  
			  
			  if (TotalCapitalStructureRatiosInputsOnly > 100)
		      {
		         alert("Total score may not exceed 100%");
				 elem.value = "";
				 
		      }
              else  
			    // Display Total Score;
			  {
			    document.forms["FinancialAnalysisForm"]["TotalShareholdersFundsToTotalAssetsWeight"].value =Balancing;  
                //document.forms["FinancialAnalysisForm"]["bfFinancialAnalysisScore"].value = bfTotalScore * bfFinancialAnalysis / 100;
                //document.forms["FinancialAnalysisForm"]["bfManagementAna lysisScore"].value = bfTotalScore * bfManagementAnalysis / 100;
		        //document.forms["FinancialAnalysisForm"]["bfIndustryAnalysisScore"].value = bfTotalScore * bfIndustryAnalysis / 100;
				//document.forms["FinancialAnalysisForm"]["bfShareholderAnalysisScore"].value = bfTotalScore * bfShareholderAnalysis / 100;
				//document.forms["FinancialAnalysisForm"]["bfShareholderAnalysisScore"].value = bfTotalScore * bfShareholderAnalysis / 100;
	    		//document.forms["FinancialAnalysisForm"]["bfShareholderAnalysisScore"].value = bfTotalScore * bfShareholderAnalysis / 100;
	    		//document.forms["FinancialAnalysisForm"]["bfShareholderAnalysisScore"].value = bfTotalScore * bfShareholderAnalysis / 100;
	    		//document.forms["FinancialAnalysisForm"]["bfShareholderAnalysisScore"].value = bfTotalScore * bfShareholderAnalysis / 100;
	    		//document.forms["FinancialAnalysisForm"]["bfShareholderAnalysisScore"].value = bfTotalScore * bfShareholderAnalysis / 100;
	            // Updata Small Firms Total Score = Big Firm Total Score
				//if (elem.name=="bfTotalScore")
				//{
				//  document.forms["FinancialAnalysisForm"]["sfTotalScore"].value = elem.value;
	            //}
				//document.forms["FinancialAnalysisForm"]["bfEstablishmentAnalysisScore"].value = bfTotalScore * bfEstablishmentAnalysis / 100;
			    //document.forms["FinancialAnalysisForm"]["bfEstablishmentAnalysisPercentage"].value = bfBalancing;
			  }
			}
		}
		function RecalculateDebtServiceRatios(elem)
		{
           if (isNaN(elem.value))
		   {
		     alert ("Please enter numbers only");
			 elem.value =""; 
		   }
           else
		   {
		      var InterestCoverWeight = Number(document.forms["FinancialAnalysisForm"]["InterestCoverWeight"].value);
		      var DebtServiceRatiosInputsOnly = InterestCoverWeight;
		      var Balancing = 100 - DebtServiceRatiosInputsOnly;
			  
			  
			  
			  if (DebtServiceRatiosInputsOnly > 100)
		      {
		         alert("Total score may not exceed 100%");
				 elem.value = "";
				 
		      }
              else  
			    // Display Total Score;
			  {
			    document.forms["FinancialAnalysisForm"]["EBITDAToGrossIntDebtsWeight"].value =Balancing;  
                //document.forms["FinancialAnalysisForm"]["bfFinancialAnalysisScore"].value = bfTotalScore * bfFinancialAnalysis / 100;
                //document.forms["FinancialAnalysisForm"]["bfManagementAna lysisScore"].value = bfTotalScore * bfManagementAnalysis / 100;
		        //document.forms["FinancialAnalysisForm"]["bfIndustryAnalysisScore"].value = bfTotalScore * bfIndustryAnalysis / 100;
				//document.forms["FinancialAnalysisForm"]["bfShareholderAnalysisScore"].value = bfTotalScore * bfShareholderAnalysis / 100;
				//document.forms["FinancialAnalysisForm"]["bfShareholderAnalysisScore"].value = bfTotalScore * bfShareholderAnalysis / 100;
	    		//document.forms["FinancialAnalysisForm"]["bfShareholderAnalysisScore"].value = bfTotalScore * bfShareholderAnalysis / 100;
	    		//document.forms["FinancialAnalysisForm"]["bfShareholderAnalysisScore"].value = bfTotalScore * bfShareholderAnalysis / 100;
	    		//document.forms["FinancialAnalysisForm"]["bfShareholderAnalysisScore"].value = bfTotalScore * bfShareholderAnalysis / 100;
	    		//document.forms["FinancialAnalysisForm"]["bfShareholderAnalysisScore"].value = bfTotalScore * bfShareholderAnalysis / 100;
	            // Updata Small Firms Total Score = Big Firm Total Score
				//if (elem.name=="bfTotalScore")
				//{
				//  document.forms["FinancialAnalysisForm"]["sfTotalScore"].value = elem.value;
	            //}
				//document.forms["FinancialAnalysisForm"]["bfEstablishmentAnalysisScore"].value = bfTotalScore * bfEstablishmentAnalysis / 100;
			    //document.forms["FinancialAnalysisForm"]["bfEstablishmentAnalysisPercentage"].value = bfBalancing;
			  }
			}
		}
		
		function sfRecalculate(elem)
		{
           if (isNaN(elem.value))
		   {
		     alert ("Please enter numbers only");
			 elem.value =""; 
		   }
           else
		   {
		      
			  var sfFinancialAnalysis = Number(document.forms["FinancialAnalysisForm"]["sfFinancialAnalysisPercentage"].value);
		      var sfManagementAnalysis = Number(document.forms["FinancialAnalysisForm"]["sfManagementAnalysisPercentage"].value);
		      var sfIndustryAnalysis = Number(document.forms["FinancialAnalysisForm"]["sfIndustryAnalysisPercentage"].value);
		      var sfShareholderAnalysis = Number(document.forms["FinancialAnalysisForm"]["sfShareholderAnalysisPercentage"].value);
		      var sfEstablishmentAnalysis = Number(document.forms["FinancialAnalysisForm"]["sfEstablishmentAnalysisPercentage"].value);
			  var sfTotalPercentage = sfFinancialAnalysis + sfManagementAnalysis + sfIndustryAnalysis + sfShareholderAnalysis + sfEstablishmentAnalysis;
		      var sfTotalScore = Number(document.forms["FinancialAnalysisForm"]["sfTotalScore"].value);
	
			  //var sfBalancing = 100 - sfTotalPercentage;
			  
			  
			  if (sfTotalPercentage > 100)
		      {
		         alert("Total score may not exceed 100%");
				 elem.value = "";
				 
		      }
              else  
			    // Display Total Score;
			  {
			    document.forms["FinancialAnalysisForm"]["sfTotalPercentage"].value = sfTotalPercentage;  
                document.forms["FinancialAnalysisForm"]["sfFinancialAnalysisScore"].value = sfTotalScore * sfFinancialAnalysis / 100;
                document.forms["FinancialAnalysisForm"]["sfManagementAnalysisScore"].value = sfTotalScore * sfManagementAnalysis / 100;
		        document.forms["FinancialAnalysisForm"]["sfIndustryAnalysisScore"].value = sfTotalScore * sfIndustryAnalysis / 100;
				document.forms["FinancialAnalysisForm"]["sfShareholderAnalysisScore"].value = sfTotalScore * sfShareholderAnalysis / 100;
				document.forms["FinancialAnalysisForm"]["sfEstablishmentAnalysisScore"].value = sfTotalScore * sfEstablishmentAnalysis / 100;
			   
			     
  
                //document.forms["FinancialAnalysisForm"]["sfEstablishmentAnalysisPercentage"].value = sfBalancing;
			  }
			}
		}
    </script>
</head>
<body>
   <form id = "FinancialAnalysisForm">
   <Table Border = 2 border-style = 2 align = center>
      <tr>
	      <td>
		      <table Border = 1 border-style = 2 align = top >
   			     <tr> <td><strong>MAIN CHARECTERISTICS<strong></td> 
				      <td></td>
					  <td></td>
				 </tr> 
				 <tr> <td></td>
				      <td colspan = 2  align = center>BIG FIRMS</td> 
				  </tr>
				 <tr> 
				      <td></td>
					  <td align = center><strong>%<strong></td>
					  <td><strong>Score<strong></td>
				 </tr>
				 <tr> 
				      <td><strong>Total Scores<strong></td>
					  <td><input style = "text-align:right;
										  color:white;
										  background-color:blue" 
								 size = "1" type = text readonly name = "bfTotalPercentage" value = "100" onchange="bfRecalculate(this)">
					  </td>
					  <td align = right bgcolor = "blue" color = white >
					      <input size = "1" type = text name = "bfTotalScore" onchange="bfRecalculate(this)">
					  </td>
				 </tr>
				 <tr> 
				      <td><strong>Made up of:</td>
					  <td></td><td></td>
				 </tr>
				 <tr> 
				      <td><a href ="FinancialAnalysis.htm">Financial Analysis</a></td>
					  <td><input size = "1" type = text name = "bfFinancialAnalysisPercentage" onchange="bfRecalculate(this)"></td>
					  <td><input style = "text-align:right;
										  color:white;
										  background-color:grey"
								readonly size = "1" type = text name = "bfFinancialAnalysisScore">
					  </td>
				 </tr>
				 <tr> 
				      <td><a href = "ManagementAnalysis.htm"> Management Analysis </a></td>
					  <td><input size = "1" type = text name = "bfManagementAnalysisPercentage" onchange="bfRecalculate(this)"></td>
					  <td><input style = "text-align:right;
										  color:white;
										  background-color:grey"
								 readonly size = "1" type = text name = "bfManagementAnalysisScore"></td>
				 </tr>
				 <tr> 
				      <td><a href = "IndustryAnalysis.htm">Industry Analysis</a></td>
					  <td><input size = "1" type = text name = "bfIndustryAnalysisPercentage" onchange="bfRecalculate(this)" ></td>
					  <td><input style = "text-align:right;
										  color:white;
										  background-color:grey"
								 readonly size = "1" type = text name = "bfIndustryAnalysisScore"></td>
				 </tr>
			    <tr> 
				      <td><a href = "ManagementAnalysis.htm">Shareholder Analysis</a></td>
					  <td><input size = "1" type = text name = "bfShareholderAnalysisPercentage" onchange="bfRecalculate(this)"></td>
					  <td><input style = "text-align:right;
										  color:white;
										  background-color:grey"
								 readonly size = "1" type = text name = "bfShareholderAnalysisScore"></td>
				</tr>
				<tr> 
				      <td><a href = "EstablishmentAnalysis.htm">Establishment Analysis (Balancing)</a></td>
					  <td><input size = "1" type = text name = "bfEstablishmentAnalysisPercentage" onchange="bfRecalculate(this)"></td>
					  <td><input style = "text-align:right;
										  color:white;
										  background-color:grey"
								 readonly size = "1" type = text name = "bfEstablishmentAnalysisScore"></td>
				 </tr>
				 <tr>
	                <td></td>
	                <td> <Button type = submit name = "BtnSave">Save</Button> </td>
	             </tr>
			  </table> 
		  </td>
		  <!-Gap>
		  <td><table Border = 1 Bordercolor = yellow> <tr> <td color=white></td> </tr> </Table> </td> 
		  
		  <!-Markup for small tables>
		  <td><table Border = 0 Bordercolor = blue> 
		          <tr> 
				       <td>
					       <table Border = 0 Bordercolor = red border-top= 1 border-style = 1>
   			     <tr>  
				      <td style = "color:white" >Main</td>
					  <td></td>
				 </tr> 
				 <tr> 
				      <td colspan = 2  align = center>SMALL FIRMS</td> 
				  </tr>
				 <tr> 
				      
					  <td align = center><strong>%<strong></td>
					  <td><strong>Score<strong></td>
				 </tr>
				 <tr> 
					  <td><input style = "text-align:right;
										  color:white;
										  background-color:blue" 
								 size = "1" type = text readonly name = "sfTotalPercentage" value = "100" onchange="sfRecalculate(this)">
					  </td>
				      <td>
					      <input style = "text-align:right;
										  color:white;
										  background-color:blue" 
								 readonly size = "1" type = text name = "sfTotalScore" onchange="sfRecalculate(this)">
					  </td>
				
				 <tr> 
				      <td colspan = 2 style = "color:white">Made up of</td>
					  <td></td>
				 </tr>
				 <tr> 
				      
					  <td><input size = "1" type = text name = "sfFinancialAnalysisPercentage" onchange="sfRecalculate(this)"></td>
					  <td><input style = "text-align:right;
										  color:white;
										  background-color:grey"
								readonly size = "1" type = text name = "sfFinancialAnalysisScore">
					  </td>
				 </tr>
				 <tr> 
				      
					  <td><input size = "1" type = text name = "sfManagementAnalysisPercentage" onchange="sfRecalculate(this)"></td>
					  <td><input style = "text-align:right;
										  color:white;
										  background-color:grey"
								 readonly size = "1" type = text name = "sfManagementAnalysisScore"></td>
				 </tr>
				 <tr> 
				      
					  <td><input size = "1" type = text name = "sfIndustryAnalysisPercentage" onchange="sfRecalculate(this)" ></td>
					  <td><input style = "text-align:right;
										  color:white;
										  background-color:grey"
								 readonly size = "1" type = text name = "sfIndustryAnalysisScore"></td>
				 </tr>
			    <tr> 
				      
					  <td><input size = "1" type = text name = "sfShareholderAnalysisPercentage" onchange="sfRecalculate(this)"></td>
					  <td><input style = "text-align:right;
										  color:white;
										  background-color:grey"
								 readonly size = "1" type = text name = "sfShareholderAnalysisScore"></td>
				</tr>
				<tr> 
				      
					  <td><input size = "1" type = text name = "sfEstablishmentAnalysisPercentage" onchange="sfRecalculate(this)"></td>
					  <td><input style = "text-align:right;
										  color:white;
										  background-color:grey"
								 readonly size = "1" type = text name = "sfEstablishmentAnalysisScore"></td>
				 </tr>
	             <tr><td colspan = 2><Button>Cancel</Button></td></tr>
			  </table> 
			</td> 
		    <td align = top>
			      <table align = top>
				     <tr style = "background-color:powderblue;text-align:center">
					    <td style = "text-align:left">
						   <br> <strong>FINANCIAL ANALYSIS RATIOS<strong>
						</td>
						<td>
						   <strong>%<br> Weight<strong>
						</td>
						<td>
						   <strong>Effective<br>Weight<strong>
						</td>
						<td>
						   <strong>Score<br>Allocation<strong>
						</td>
					 </tr>
					 <tr>
					    <td>Liquidity</td>
						<td><input style = "align:center" type = text name = "LiquidityCategoryWeight" Size = 1 onchange = "RecalculateFinancialAnalysisWeights(this)"></td>
                        <td><input type = text name = "LiquidityCategoryEffectiveWeight" Size = 1 readonly></td>
					    <td><input type = text name = "LiquidityCategoryScore" Size = 1 readonly></td>
					  </tr>
					  <tr>
					    <td>Profitability</td>
						<td><input type = text name = "ProfitabilityCategoryWeight" Size = 1 onchange = "RecalculateFinancialAnalysisWeights(this)"></td>
						<td><input type = text name = "ProfitabilityCategoryEffectiveWeight" Size = 1 readonly></td>
						<td><input type = text name = "ProfitabilityCategoryScore" Size = 1 readonly></td>
					   </tr>
					   <tr>
	                    <td>Capital Structure</td>
						<td><input type = text name = "CapitalStructureCategoryWeight" Size = 1 onchange = "RecalculateFinancialAnalysisWeights(this)"></td>
						<td><input type = text name = "CapitalStructureCategoryEffectiveWeight" Size = 1 readonly></td>
						<td><input type = text name = "CapitalStructureCategoryEffectiveWeight" Size = 1 readonly></td>
						</tr>
					   <tr> 
				        <td>Debt Service (Balancing)</td>
						<td><input type = text name = "DebtServiceCategoryWeight" Size = 1 value = 100 readonly></td>
						<td><input type = text name = "DebtServiceCategoryEffectiveWeight" Size = 1 readonly></td>
						<td><input type = text name = "DebtServiceCategoryScore" Size = 1 readonly></td>
					   </tr>
					   <tr>
					     <td>TOTAL</td>
						 <td><input type = text name = "TotalFinancialAnalysisRatiosWeight" Size = 1 value = 100 readonly></td>
						 <td><input type = text name = "TotalFinancialAnalysisRatiosWeight" Size = 1 readonly"></td>
						 <td><input type = text name = "TotalFinancialAnalysisEffectiveWeight" Size = 1 readonly></td>
					    </tr
						<tr></tr>
						<tr>
						   <td><strong>Drilled Down As Follows:<strong></td>
						</tr>
						
						<tr>
					     <td colspan = 4>---------------------------------------------------------------------------------------</td>
					    </tr>
						<!-- Level 3 Definitions -->
                       <tr></tr>	   
				        <tr style = "background-color:lightgrey" >
					        <td><strong>Liquidity Ratios </strong></td>	
					    </tr>
					    <tr>
					        <td>Current Ratio</td>
						    <td><input type = text name = "CurrentRatioWeight" Size = 1 onchange = RecalculateLiquidityRatios(this)></td>
							<td><input type = text name = "CurrentRatioEffectiveWeight" Size = 1 readonly></td>
							<td><input type = text name = "CurrentRatioScore" Size = 1 readonly></td>
					    </tr>
					    <tr>
					         <td>Debtor Days</td>
						     <td><input type = text name = "DebtorDaysWeight" Size = 1 onchange = RecalculateLiquidityRatios(this)></td>
							 <td><input type = text name = "DebtorDaysEffectiveWeight" Size = 1 readonly></td>
							 <td><input type = text name = "DebtorDaysScore" Size = 1 readonly></td>
					    </tr>
					    <tr>
	                         <td>Turnover/Working Capital</td>
						     <td><input type = text name = "TurnoverToWorkingCapitalWeight" Size = 1 value = 100 onchange = RecalculateLiquidity(this)></td>
							 <td><input type = text name = "TurnoverToWorkingCapitalEffectiveWeight" Size = 1 readonly></td>
							 <td><input type = text name = "TurnoverToWorkingCapitalScore" Size = 1 readonly></td>
					    </tr>
					    <tr>
					         <td>TOTAL</td>
						     <td><input type = text name = "TotalLiquidityRatiosWeight" Size = 1 value = 100 readonly></td>
							 <td><input type = text name = "TotalLiquidityRatiosEffetiveWeight" Size = 1 readonly></td>
							 <td><input type = text name = "TotalLiquidityRatiosScore" Size = 1 readonly></td>
					    </tr>
						<tr>
					     <td colspan = 4>---------------------------------------------------------------------------------------</td>
					    </tr>
				        <tr></tr>
						<tr style = "background-color:lightgrey">
					        <td><strong>Profitability Ratios </strong></td>
					    </tr>
					    <tr>
					        <td>Gross Profit Ratio</td>
						    <td><input type = text name = "GrossProfitMarginWeight" onchange = "RecalculateProfitabilityRatios(this)" Size = 1</td>
							<td><input type = text name = "GrossProfitEffectiveWeight" Size = 1 readonly></td>
							<td><input type = text name = "GrossProfitScore" Size = 1 readonly></td>
					    </tr>
					    <tr>
					         <td>Operating Profit Margin</td>
						     <td><input type = text name = "OperatingProfitMarginWeight" Size = 1 onchange = "RecalculateProfitabilityRatios(this)"></td>
							 <td><input type = text name = "OperatingProfitMarginEffectiveWeight" Size = 1 readonly></td>
							 <td><input type = text name = "OperatingProfitMarginScore" Size = 1 readonly></td>
					    </tr>
					    <tr>
	                         <td>Turnover Growth</td>
						     <td><input type = text name = "TurnoverGrowthWeight" Size = 1 onchange = "RecalculateProfitabilityRatios(this)"></td>
							 <td><input type = text name = "TurnoverGrowthEffectiveWeight" Size = 1 readonly></td>
							 <td><input type = text name = "TurnoverGrowthScore" Size = 1 readonly></td>
						</tr>
						<tr>
	                         <td>Return On Assets</td>
						     <td><input type = text name = "ReturnOnAssetsWeight" Size = 1 onchange = "RecalculateProfitabilityRatios(this)"></td>
							 <td><input type = text name = "ReturnOnAssetsEffectiveWeight" Size = 1 readonly></td>
							 <td><input type = text name = "ReturnOnAssetsScore" Size = 1 readonly></td>
						</tr>
						<tr>
	                         <td>Return On Investments</td>
						     <td><input type = text name = "ReturnOnInvestmentsWeight" Size = 1 onchange = "RecalculateProfitabilityRatios(this)"></td>
							 <td><input type = text name = "ReturnOnInvestmentsEffectiveWeight" Size = 1 readonly></td>
							 <td><input type = text name = "RetrunOnInvestementsScore" Size = 1 readonly></td>
						</tr>
					    <tr>
					         <td>TOTAL</td>
						     <td>
						         <input type = text name = "TotalProfitabilityRatiosWeight" value = 100 Size = 1 onchange = "RecalculateProfitabilityRatios(this)">
								 <td><input type = text name = "TotalProfitabilityRatiosEffectiveWeight" Size = 1 readonly></td>
							     <td><input type = text name = "TotalProfitabilityRatiosScore" Size = 1 readonly></td>
						     </td>
					    </tr>
						<tr>
					     <td colspan = 4>---------------------------------------------------------------------------------------</td>
					    </tr>
				        <tr></tr>
						<tr style = "background-color:lightgrey">
					        <td><strong>Capital Structure Ratios </strong></td>
					    </tr>
					    <tr>
					        <td>Debt/Equity</td>
						    <td><input type = text name = "DebtToEquityWeight" Size = 1 onchange = "RecalculateCapitalStructureRatios(this)"></td>
							<td><input type = text name = "DebtToEquityEffectiveWeight" Size = 1 readonly></td>
							<td><input type = text name = "DebtToEquityScore" Size = 1 readonly></td>
					    </tr>
					    <tr>
					         <td>Debt/Tangible Net Worth</td>
						     <td><input type = text name = "DebtToTangibleNetWorthWeight" Size = 1 onchange = "RecalculateCapitalStructureRatios(this)"</td>
							 <td><input type = text name = "DebtToTangibleNetWorthEffectiveWeight" Size = 1 readonly></td>
							 <td><input type = text name = "DebtToTangibleNetWorthScore" Size = 1 readonly></td>
					    </tr>
					    <tr>
					         <td>Shareholders Funds/Total Assets</td>
						     <td><input type = text name = "TotalShareholdersFundsToTotalAssetsWeight" Size = 1 readonly</td>
							 <td><input type = text name = "TotalShareholdersFundsToTotalAssetsEffectiveWeight" Size = 1 readonly></td>
							 <td><input type = text name = "TotalShareholdersFundsToTotalAssetsScore" Size = 1 readonly></td>
					    </tr>
					 
						<tr>
					         <td>TOTAL</td>
						     <td><input type = text name = "TotalCapitalStructureRatiosWeight" Size = 1 value = 100></td>
							 <td><input type = text name = "TotalCapitalStructureRatiosEffectiveWeight" Size = 1></td>
							 <td><input type = text name = "TotalCapitalStructureScore" Size = 1 readonly></td>  
					    </tr>
						<tr>
					     <td colspan = 4>---------------------------------------------------------------------------------------</td>
					    </tr>
						<tr style = "background-color:lightgrey">
					        <td><strong>Debt Service Ratios </strong></td>
					    </tr>
					    <tr>
					        <td>Interest Cover</td>
						    <td><input type = text name = "InterestCoverWeight" Size = 1 onchange = "RecalculateDebtServiceRatios(this)"></td>
							<td><input type = text name = "InterestCoverEffectiveWeight" Size = 1></td>
							<td><input type = text name = "InterestCoverScore" Size = 1></td>
					    </tr>
					    <tr>
					         <td>EBITDA/Gross Interest Earning Debts</td>
						     <td><input type = text name = "EBITDAToGrossIntDebtsWeight" Size = 1 readonly></td>
							 <td><input type = text name = "EBITDAToGrossIntDebtsEffectiveWeight" Size = 1 readonly></td>
							 <td><input type = text name = "EBITDAToGrossIntDebtsScore" Size = 1 readonly></td>
					    </tr>
					    <tr>
					         <td>TOTAL</td>
						     <td><input type = text name = "TotalDebtServiceRatiosWeight" Size = 1 value = 100 readonly></td>
							 <td><input type = text name = "TotalDebtServiceRatiosEffectiveWeight" Size = 1 readonly></td>
							 <td><input type = text name = "TotalDebtServiceRatiosScore" Size = 1 readonly></td>
					    </tr>
								  
					</td>
			      </table>
			</td>
			 
			
		  </tr> 
		</Table> 
		  </td></td>              
	  </tr>
	 
   </Table>
   </form>
</body>

</html>