<html>

<head>
    <script type="text/javascript" src="jquery-3.5.1.js"></script>
	<script type="text/javascript" src="jquery.number.js"></script>
	<script>
        $(function()
		    {
			    //Setting up the number.js number formatting
			    $('#number_container').slideDown('fast');
				
				$('.price').on('change',function(){
					console.log('Change event.');
					var val = $('.price').val();
					$('#the_number').text( val !== '' ? val : '(empty)' );
				});
				
				$('.price').change(function(){
					console.log('Second change event...');
					
				});
				
				$('.price').number( true, 0 );
				
				// Get the value of the number for the demo.
				$('#get_number').on('click',function(){
					
					var val = $('.price').val();
					
					$('#the_number').text( val !== '' ? val : '(empty)' );
				});
				document.forms["FinancialAnalysisForm"]["username"].value = localStorage.username;
				
				
				//Load Data
				
				LoadFinancialAnalysisMainWeights(document.forms["FinancialAnalysisForm"]["CurrentRatioWeight"]);
				LoadData();

				sfRecalculate(document.forms["FinancialAnalysisForm"]["CurrentRatioWeight"]);
				bfRecalculate(document.forms["FinancialAnalysisForm"]["CurrentRatioWeight"]);
				
				RecalculateFinancialAnalysisWeights(document.forms["FinancialAnalysisForm"]["CurrentRatioWeight"]);
				RecalculateLiquidityRatios(document.forms["FinancialAnalysisForm"]["CurrentRatioWeight"]);

				RecalculateProfitabilityRatios(document.forms["FinancialAnalysisForm"]["CurrentRatioWeight"]);
				RecalculateCapitalStructureRatios(document.forms["FinancialAnalysisForm"]["CurrentRatioWeight"]);
				RecalculateDebtServiceRatios(document.forms["FinancialAnalysisForm"]["CurrentRatioWeight"]);
			    SetReadOnly_MainWeights();
				
			}); 
		
		function RecalculateForm(thisObj)
		{
                var elem = thisObj;
				if	(typeof(elem)=="string") 
				   {elem =document.forms["FinancialAnalysisForm"]["CurrentRatioWeight"];}		
				sfRecalculate(elem);
				bfRecalculate(elem);
				
				RecalculateFinancialAnalysisWeights(elem);
				RecalculateLiquidityRatios(elem);

				RecalculateProfitabilityRatios(elem);
				RecalculateCapitalStructureRatios(elem);
				RecalculateDebtServiceRatios(elem);
				
		}
		
		
		function LoadFinancialAnalysisMainWeights()
		
		{
              // Loading Big Firms Data
			  document.forms["FinancialAnalysisForm"]["bfFinancialAnalysisPercentage"].value = ToNumber(localStorage.bfFinancialAnalysis);
		      document.forms["FinancialAnalysisForm"]["bfManagementAnalysisPercentage"].value = ToNumber(localStorage.bfManagementAnalysis);
		      document.forms["FinancialAnalysisForm"]["bfIndustryAnalysisPercentage"].value = ToNumber(localStorage.bfIndustryAnalysis);
		      document.forms["FinancialAnalysisForm"]["bfShareholderAnalysisPercentage"].value = ToNumber(localStorage.bfShareholderAnalysis);
		      document.forms["FinancialAnalysisForm"]["bfBehavioralAnalysisPercentage"].value = ToNumber(localStorage.bfEstablishmentAnalysis);
		      document.forms["FinancialAnalysisForm"]["bfTotalScore"].value = ToNumber(localStorage.bfTotalScore);
		      // Loading Small Firms Data
              document.forms["FinancialAnalysisForm"]["sfFinancialAnalysisPercentage"].value = ToNumber(localStorage.sfFinancialAnalysis) ;
		      document.forms["FinancialAnalysisForm"]["sfManagementAnalysisPercentage"].value = ToNumber(localStorage.sfManagementAnalysis);
		      document.forms["FinancialAnalysisForm"]["sfIndustryAnalysisPercentage"].value = ToNumber(localStorage.sfIndustryAnalysis);
		      document.forms["FinancialAnalysisForm"]["sfShareholderAnalysisPercentage"].value = ToNumber(localStorage.sfShareholderAnalysis);
		      document.forms["FinancialAnalysisForm"]["sfBehavioralAnalysisPercentage"].value = ToNumber(localStorage.sfEstablishmentAnalysis);
		      document.forms["FinancialAnalysisForm"]["sfTotalScore"].value = ToNumber(localStorage.bfTotalScore);
			  //Loading Turnover Threshold and Ratio Weights
			  document.forms["FinancialAnalysisForm"]["TurnoverThreshold"].value = Thousands_Separators(localStorage.TurnoverThreshold);  
        	  document.forms["FinancialAnalysisForm"]["RatioWeightYear1"].value = ToNumber(localStorage.RatioWeightYear1);  
       	      document.forms["FinancialAnalysisForm"]["RatioWeightYear2"].value = ToNumber(localStorage.RatioWeightYear2);  
       	      document.forms["FinancialAnalysisForm"]["RatioWeightYear3"].value = ToNumber(localStorage.RatioWeightYear3);  
 		  }
		function SetReadOnly_MainWeights()
		{
           
		   // Loading Big Firms Data
			  document.forms["FinancialAnalysisForm"]["bfFinancialAnalysisPercentage"].setAttribute('readonly',true);//readOnly = true;
		      document.forms["FinancialAnalysisForm"]["bfManagementAnalysisPercentage"].readOnly = true;
		      document.forms["FinancialAnalysisForm"]["bfIndustryAnalysisPercentage"].readOnly = true;
		      document.forms["FinancialAnalysisForm"]["bfShareholderAnalysisPercentage"].readOnly = true;
		      document.forms["FinancialAnalysisForm"]["bfBehavioralAnalysisPercentage"].readOnly = true;
		      document.forms["FinancialAnalysisForm"]["bfTotalScore"].readOnly = true;
		      // Loading Small Firms Data
              document.forms["FinancialAnalysisForm"]["sfFinancialAnalysisPercentage"].readOnly = true;
		      document.forms["FinancialAnalysisForm"]["sfManagementAnalysisPercentage"].readOnly = true;
		      document.forms["FinancialAnalysisForm"]["sfIndustryAnalysisPercentage"].readOnly = true;
		      document.forms["FinancialAnalysisForm"]["sfShareholderAnalysisPercentage"].readOnly = true;
		      document.forms["FinancialAnalysisForm"]["sfBehavioralAnalysisPercentage"].readOnly = true;
		      document.forms["FinancialAnalysisForm"]["sfTotalScore"].readOnly = true;
			  //Loading Turnover Threshold and Ratio Weights
			  document.forms["FinancialAnalysisForm"]["TurnoverThreshold"].readOnly = true;  
        	  document.forms["FinancialAnalysisForm"]["RatioWeightYear1"].readOnly = true;  
       	      document.forms["FinancialAnalysisForm"]["RatioWeightYear2"].readOnly = true;  
       	      document.forms["FinancialAnalysisForm"]["RatioWeightYear3"].readOnly = true;  
 				
		}
		
		function SaveMainWeights()
		
		{
              // Loading Big Firms Data
			  localStorage.bfFinancialAnalysis = ToNumber(document.forms["FinancialAnalysisForm"]["bfFinancialAnalysisPercentage"].value);
			  localStorage.bfManagementAnalysis = ToNumber(document.forms["FinancialAnalysisForm"]["bfManagementAnalysisPercentage"].value);
			  localStorage.bfIndustryAnalysis = ToNumber(document.forms["FinancialAnalysisForm"]["bfIndustryAnalysisPercentage"].value);
			  localStorage.bfShareholderAnalysis = ToNumber(document.forms["FinancialAnalysisForm"]["bfShareholderAnalysisPercentage"].value);
			  localStorage.bfBehavioralAnalysis = ToNumber(document.forms["FinancialAnalysisForm"]["bfBehavioralAnalysisPercentage"].value);
		      // Loading Small Firsm Data
			  localStorage.sfFinancialAnalysis = ToNumber(document.forms["FinancialAnalysisForm"]["sfFinancialAnalysisPercentage"].value);
			  localStorage.sfManagementAnalysis = ToNumber(document.forms["FinancialAnalysisForm"]["sfManagementAnalysisPercentage"].value);
			  localStorage.sfIndustryAnalysis = ToNumber(document.forms["FinancialAnalysisForm"]["sfIndustryAnalysisPercentage"].value);
			  localStorage.sfShareholderAnalysis = ToNumber(document.forms["FinancialAnalysisForm"]["sfShareholderAnalysisPercentage"].value);
			  localStorage.sfBehavioralAnalysis = ToNumber(document.forms["FinancialAnalysisForm"]["sfBehavioralAnalysisPercentage"].value);
			  
			  localStorage.bfTotalScore = ToNumber(document.forms["FinancialAnalysisForm"]["bfTotalScore.value"]);
			  localStorage.sfTotalScore = ToNumber(document.forms["FinancialAnalysisForm"]["sfTotalScore.value"]);
	
		}
	
		
		function SaveData()
		
		{   
			  SaveMainWeights();
			  //Saving Financial Analysis Category Weights  
			  
			  localStorage.LiquidityCategoryWeight = document.forms["FinancialAnalysisForm"]["LiquidityCategoryWeight"].value;
		      localStorage.ProfitabilityCategoryWeight = document.forms["FinancialAnalysisForm"]["ProfitabilityCategoryWeight"].value;
			  localStorage.CapitalStructureCategoryWeight = document.forms["FinancialAnalysisForm"]["CapitalStructureCategoryWeight"].value;
			  localStorage.DebtServiceCategoryWeight = document.forms["FinancialAnalysisForm"]["DebtServiceCategoryWeight"].value;
		
			  //Saving Liquidity Metrics
			  localStorage.CurrentRatioWeight = Number(document.forms["FinancialAnalysisForm"]["CurrentRatioWeight"].value);
		      localStorage.DebtorDaysWeight = Number(document.forms["FinancialAnalysisForm"]["DebtorDaysWeight"].value);
		      localStorage.TurnoverToWorkingCapitalWeight = Number(document.forms["FinancialAnalysisForm"]["TurnoverToWorkingCapitalWeight"].value);
            //Saving Profitability Metrics
			  localStorage.GrossProfitMarginWeight = Number(document.forms["FinancialAnalysisForm"]["GrossProfitMarginWeight"].value);
		      localStorage.OperatingProfitMarginWeight = Number(document.forms["FinancialAnalysisForm"]["OperatingProfitMarginWeight"].value);
		      localStorage.TurnoverGrowthWeight = Number(document.forms["FinancialAnalysisForm"]["TurnoverGrowthWeight"].value);
		      localStorage.ReturnOnAssetsWeight = Number(document.forms["FinancialAnalysisForm"]["ReturnOnAssetsWeight"].value);
		      localStorage.ReturnOnInvestmentsWeight = Number(document.forms["FinancialAnalysisForm"]["ReturnOnInvestmentsWeight"].value);
              //Saving Capital Structure Metrics
			  localStorage.DebtToEquityWeight = Number(document.forms["FinancialAnalysisForm"]["DebtToEquityWeight"].value);
		      localStorage.DebtToTangibleNetWorthWeight = Number(document.forms["FinancialAnalysisForm"]["DebtToTangibleNetWorthWeight"].value);
		 	  localStorage.ShareholdersFundsToTotalAssetsWeight = Number(document.forms["FinancialAnalysisForm"]["ShareholdersFundsToTotalAssetsWeight"].value);  
              //Saving Debt Service Metrics 
			  localStorage.InterestCoverWeight = Number(document.forms["FinancialAnalysisForm"]["InterestCoverWeight"].value);
		      localStorage.EBITDAToGrossIntDebtsWeight = Number(document.forms["FinancialAnalysisForm"]["EBITDAToGrossIntDebtsWeight"].value);  
 			  //Saving Turnover Threshold and Ratio Weights
			  localStorage.TurnoverThreshold = ToNumber(document.forms["FinancialAnalysisForm"]["TurnoverThreshold"].value);  
        	  localStorage.RatioWeightYear1 = ToNumber(document.forms["FinancialAnalysisForm"]["RatioWeightYear1"].value);  
       	      localStorage.RatioWeightYear2 = ToNumber(document.forms["FinancialAnalysisForm"]["RatioWeightYear2"].value);  
       	      localStorage.RatioWeightYear3 = ToNumber(document.forms["FinancialAnalysisForm"]["RatioWeightYear3"].value);  
             //alert successfull save operation
			  alert("Settings successfully saved");
		}
       
	   function round(number,decimalPlaces)
	   {
	      var factorOf10 = Math.pow(10,decimalPlaces);
		  return Math.round(number * factorOf10) / factorOf10;
	   }
	   
	   
	   function ToNumber(nStr) 
		{
	      //alert (IsNan(nStr));
		  if (nStr == "infinity")
		     {
		       return 0;
		     }
		  else
		     {  
			   if   (typeof(nStr) == "undefined")
		            {  return 0;}
		       else  
		            {
		            if (nStr == "") {return 0};
		            if (nStr != "") 
					   {
					       var UnRoundedNumber = parseFloat(nStr.replace(/,/g,''));
						   return round(UnRoundedNumber,2);
					   }
		            }
	         }  
	    }	
	    function LoadData()
		
		{   
			 
			 
			 
			 //Loading Financial Analysis Category Weights  
			  
			  document.forms["FinancialAnalysisForm"]["LiquidityCategoryWeight"].value = ToNumber(localStorage.LiquidityCategoryWeight);
		      document.forms["FinancialAnalysisForm"]["ProfitabilityCategoryWeight"].value = ToNumber(localStorage.ProfitabilityCategoryWeight);
			  document.forms["FinancialAnalysisForm"]["CapitalStructureCategoryWeight"].value = ToNumber(localStorage.CapitalStructureCategoryWeight);
			  document.forms["FinancialAnalysisForm"]["DebtServiceCategoryWeight"].value = ToNumber(localStorage.DebtServiceCategoryWeight);
			  
			 //Loading Liquidity Metrics
			  document.forms["FinancialAnalysisForm"]["CurrentRatioWeight"].value = ToNumber(localStorage.CurrentRatioWeight);
		      document.forms["FinancialAnalysisForm"]["DebtorDaysWeight"].value = ToNumber(localStorage.DebtorDaysWeight);
		      document.forms["FinancialAnalysisForm"]["TurnoverToWorkingCapitalWeight"].value = ToNumber(localStorage.TurnoverToWorkingCapitalWeight);
		      document.forms["FinancialAnalysisForm"]["TurnoverToWorkingCapitalWeight"].value = ToNumber(localStorage.TurnoverToWorkingCapitalWeight);  
              //Loading Profitability Metrics
			  document.forms["FinancialAnalysisForm"]["GrossProfitMarginWeight"].value = ToNumber(localStorage.GrossProfitMarginWeight);
		      document.forms["FinancialAnalysisForm"]["OperatingProfitMarginWeight"].value = ToNumber(localStorage.OperatingProfitMarginWeight);
		      document.forms["FinancialAnalysisForm"]["TurnoverGrowthWeight"].value = ToNumber(localStorage.TurnoverGrowthWeight);
		      document.forms["FinancialAnalysisForm"]["ReturnOnAssetsWeight"].value = ToNumber(localStorage.ReturnOnAssetsWeight);
		      document.forms["FinancialAnalysisForm"]["ReturnOnInvestmentsWeight"].value = ToNumber(localStorage.ReturnOnInvestmentsWeight);
              //Loading Capital Structure Metrics
			  document.forms["FinancialAnalysisForm"]["DebtToEquityWeight"].value = ToNumber(localStorage.DebtToEquityWeight);
		      document.forms["FinancialAnalysisForm"]["DebtToTangibleNetWorthWeight"].value = ToNumber(localStorage.DebtToTangibleNetWorthWeight);
		 	  document.forms["FinancialAnalysisForm"]["ShareholdersFundsToTotalAssetsWeight"].value = ToNumber(localStorage.ShareholdersFundsToTotalAssetsWeight);  
 			  //Loading Debt Service Metrics 
			  document.forms["FinancialAnalysisForm"]["InterestCoverWeight"].value = ToNumber(localStorage.InterestCoverWeight);
		      document.forms["FinancialAnalysisForm"]["EBITDAToGrossIntDebtsWeight"].value = ToNumber(localStorage.EBITDAToGrossIntDebtsWeight);  
   	}
     
		
		function RecalculateFinancialAnalysisWeights(elem)
		{
           if (isNaN(elem.value))
		   {
		     alert ("Please enter numbers only");
			 elem.value =""; 
		   }
           else
		   {
		      //Open Financial Analysis Table from database transfer to temporary variables
              TotalScore = ToNumber(document.forms["FinancialAnalysisForm"]["bfTotalScore"].value);
			  bfFinancialCategoryWeight =ToNumber(document.forms["FinancialAnalysisForm"]["bfFinancialAnalysisPercentage"].value);
			  sfFinancialCategoryWeight =ToNumber(document.forms["FinancialAnalysisForm"]["sfFinancialAnalysisPercentage"].value);
			  //Convert Financial Analysis Category Weights on document to numbers and hold in temproary variables
			  var LiquidityCategoryWeight = Number(document.forms["FinancialAnalysisForm"]["LiquidityCategoryWeight"].value);
		      var ProfitabilityCategoryWeight = Number(document.forms["FinancialAnalysisForm"]["ProfitabilityCategoryWeight"].value);
		      var CapitalStructureCategoryWeight = Number(document.forms["FinancialAnalysisForm"]["CapitalStructureCategoryWeight"].value);
		 	  var TotalFinancialAnalysisRatiosInputsOnly = LiquidityCategoryWeight + ProfitabilityCategoryWeight + CapitalStructureCategoryWeight;
		      var Balancing = 100 - TotalFinancialAnalysisRatiosInputsOnly;
      	
			  
			  if (TotalFinancialAnalysisRatiosInputsOnly > 100)
		      {
		         alert("Total score may not exceed 100%");
				 elem.value = "";
				 
		      }
              else  
			    
			  {
			     //Calculate Score Allocation = Total Score X Financial Category Weight X Sub-category Weight 
			     
				 //1. Score Allocation : Big Firms
				 var bfLiquidityCategoryScore = TotalScore * bfFinancialCategoryWeight * LiquidityCategoryWeight/10000;
				 var bfProfitabilityCategoryScore = TotalScore * bfFinancialCategoryWeight * ProfitabilityCategoryWeight/10000;
				 var bfCapitalStructureCategoryScore = TotalScore * bfFinancialCategoryWeight * CapitalStructureCategoryWeight/10000;
				 var bfDebtServiceCategoryScore = TotalScore * bfFinancialCategoryWeight * Balancing/10000;
				 var bfTotalFinancialAnalysisCategoryScore = bfLiquidityCategoryScore + bfProfitabilityCategoryScore + bfCapitalStructureCategoryScore + bfDebtServiceCategoryScore;
				 //2. Score Allocation : Small Firms
				 var sfLiquidityCategoryScore = TotalScore * sfFinancialCategoryWeight * LiquidityCategoryWeight/10000;
				 var sfProfitabilityCategoryScore = TotalScore * sfFinancialCategoryWeight * ProfitabilityCategoryWeight/10000;
				 var sfCapitalStructureCategoryScore = TotalScore * sfFinancialCategoryWeight * CapitalStructureCategoryWeight/10000;
				 var sfDebtServiceCategoryScore = TotalScore * sfFinancialCategoryWeight * Balancing/10000;
				 var sfTotalFinancialAnalysisCategoryScore = sfLiquidityCategoryScore + sfProfitabilityCategoryScore + sfCapitalStructureCategoryScore + sfDebtServiceCategoryScore;
				
				 
				 
				
				 //Display Total Scores - Big Firms
			     document.forms["FinancialAnalysisForm"]["bfLiquidityCategoryScore"].value = round(bfLiquidityCategoryScore,1);
                 document.forms["FinancialAnalysisForm"]["bfProfitabilityCategoryScore"].value = round(bfProfitabilityCategoryScore,1);
				 document.forms["FinancialAnalysisForm"]["bfCapitalStructureCategoryScore"].value = round(bfCapitalStructureCategoryScore,1);
				 document.forms["FinancialAnalysisForm"]["bfDebtServiceCategoryScore"].value = round(bfDebtServiceCategoryScore,1);
				 document.forms["FinancialAnalysisForm"]["bfTotalFinancialAnalysisCategoryScore"].value = round(bfTotalFinancialAnalysisCategoryScore,1);
				 //Display Total Scores - Small Firms
			     document.forms["FinancialAnalysisForm"]["sfLiquidityCategoryScore"].value = round(sfLiquidityCategoryScore,1);
                 document.forms["FinancialAnalysisForm"]["sfProfitabilityCategoryScore"].value = round(sfProfitabilityCategoryScore,1);
				 document.forms["FinancialAnalysisForm"]["sfCapitalStructureCategoryScore"].value = round(sfCapitalStructureCategoryScore,1);
				 document.forms["FinancialAnalysisForm"]["sfDebtServiceCategoryScore"].value = round(sfDebtServiceCategoryScore,1);
				 document.forms["FinancialAnalysisForm"]["sfTotalFinancialAnalysisCategoryScore"].value = round(sfTotalFinancialAnalysisCategoryScore,1);
				
				
				
				 document.forms["FinancialAnalysisForm"]["DebtServiceCategoryWeight"].value =round(Balancing,1);  
                
				//Recalculate and Display Effective Weights =  Total Score / Sub-Category Score
				
				//Effective Weights Calculation : Big Firms
				  bfLiquidityEffWeight = bfLiquidityCategoryScore/TotalScore * 100;
                  bfProfitabilityEffWeight = bfProfitabilityCategoryScore/TotalScore * 100;
				  bfCapitalStructureEffWeight = bfCapitalStructureCategoryScore/TotalScore * 100;
			      bfDebtServiceEffWeight = bfDebtServiceCategoryScore/TotalScore * 100;
				  bfTotalFinCatEffWeight = bfTotalFinancialAnalysisCategoryScore/TotalScore * 100;
				//Effective Weights Calculation : Small Firms
				  sfLiquidityEffWeight = sfLiquidityCategoryScore/TotalScore * 100;
				  sfProfitabilityEffWeight = sfProfitabilityCategoryScore/TotalScore * 100;
				  sfCapitalStructureEffWeight = sfCapitalStructureCategoryScore/TotalScore * 100;
			      sfDebtServiceEffWeight = sfDebtServiceCategoryScore/TotalScore * 100;
				  sfTotalFinCatEffWeight = sfTotalFinancialAnalysisCategoryScore/TotalScore * 100;
			
			    //Display effective weights: Big Firms
				 document.forms["FinancialAnalysisForm"]["bfLiquidityCategoryEffectiveWeight"].value = round(bfLiquidityEffWeight,1);
                 document.forms["FinancialAnalysisForm"]["bfProfitabilityCategoryEffectiveWeight"].value = round(bfProfitabilityEffWeight,1);
                 document.forms["FinancialAnalysisForm"]["bfCapitalStructureCategoryEffectiveWeight"].value = round(bfCapitalStructureEffWeight,1);
                 document.forms["FinancialAnalysisForm"]["bfDebtServiceCategoryEffectiveWeight"].value = round(bfDebtServiceEffWeight,1);
                 document.forms["FinancialAnalysisForm"]["bfTotalFinancialAnalysisCategoryEffectiveWeight"].value = round(bfTotalFinCatEffWeight,1);
				//Display effective weights: Small Firms
				 document.forms["FinancialAnalysisForm"]["sfLiquidityCategoryEffectiveWeight"].value = round(sfLiquidityEffWeight,1);
                 document.forms["FinancialAnalysisForm"]["sfProfitabilityCategoryEffectiveWeight"].value = round(sfProfitabilityEffWeight,1);
                 document.forms["FinancialAnalysisForm"]["sfCapitalStructureCategoryEffectiveWeight"].value = round(sfCapitalStructureEffWeight,1);
                 document.forms["FinancialAnalysisForm"]["sfDebtServiceCategoryEffectiveWeight"].value = round(sfDebtServiceEffWeight,1);
                 document.forms["FinancialAnalysisForm"]["sfTotalFinancialAnalysisCategoryEffectiveWeight"].value = round(sfTotalFinCatEffWeight,1);
	
			   
			  }
			}
		}
		
		function RecalculateLiquidityRatios(elem)
		{
           if (isNaN(elem.value))
		   {
		     alert ("Please enter numbers only");
			 elem.value =""; 
		   }
           else
		   {
		      var CurrentRatioWeight = ToNumber(document.forms["FinancialAnalysisForm"]["CurrentRatioWeight"].value);
		      var DebtorDaysWeight = ToNumber(document.forms["FinancialAnalysisForm"]["DebtorDaysWeight"].value);
		      var TurnoverToWorkingCapitalWeight = ToNumber(document.forms["FinancialAnalysisForm"]["TurnoverToWorkingCapitalWeight"].value);
		 	  var TotalLiquityRatiosInputsOnly = CurrentRatioWeight + DebtorDaysWeight;
		      var Balancing = 100 - TotalLiquityRatiosInputsOnly;
			  
			  
			  
			  if (TotalLiquityRatiosInputsOnly > 100)
		      {
		         alert("Total score may not exceed 100%");
				 elem.value = "";
				 
		      }
              else  
			    // Display Total Score;
			  {
			     document.forms["FinancialAnalysisForm"]["TurnoverToWorkingCapitalWeight"].value =round(Balancing,1);  
                 //Calculate Score Allocation = Total Score X Financial Category Weight X Sub-category Weight 
			     TotalScore = ToNumber(document.forms["FinancialAnalysisForm"]["bfTotalScore"].value);
				 bfLiquidityCategoryScore = ToNumber(document.forms["FinancialAnalysisForm"]["bfLiquidityCategoryScore"].value);
                 sfLiquidityCategoryScore = ToNumber(document.forms["FinancialAnalysisForm"]["sfLiquidityCategoryScore"].value);
          
				 //Calculate Scores - Big Firms
				 var bfCurrentRatioScore = bfLiquidityCategoryScore * CurrentRatioWeight/100;
				 var bfDebtorDaysScore = bfLiquidityCategoryScore * DebtorDaysWeight/100;
				 var bfTotalLiquidityRatiosScoreBeforeLast = bfCurrentRatioScore + bfDebtorDaysScore;
				 var bfTurnoverToWorkingCapitalScore = bfLiquidityCategoryScore - bfTotalLiquidityRatiosScoreBeforeLast;
				 //Calculate Scores - Small Firms
				 var sfCurrentRatioScore = sfLiquidityCategoryScore * CurrentRatioWeight/100;
				 var sfDebtorDaysScore = sfLiquidityCategoryScore * DebtorDaysWeight/100;
				 var sfTotalLiquidityRatiosScoreBeforeLast = sfCurrentRatioScore + sfDebtorDaysScore;
				 var sfTurnoverToWorkingCapitalScore = sfLiquidityCategoryScore - sfTotalLiquidityRatiosScoreBeforeLast;
				 
				
				 //Display Total Scores - Big Firms
			     document.forms["FinancialAnalysisForm"]["bfCurrentRatioScore"].value = round(bfCurrentRatioScore,1);
                 document.forms["FinancialAnalysisForm"]["bfDebtorDaysScore"].value = round(bfDebtorDaysScore,1);
				 document.forms["FinancialAnalysisForm"]["bfTurnoverToWorkingCapitalScore"].value = round(bfTurnoverToWorkingCapitalScore,1);
				 document.forms["FinancialAnalysisForm"]["bfTotalLiquidityRatiosScore"].value = round(bfLiquidityCategoryScore,1);
		         //Display Total Scores - Small Firms
			     document.forms["FinancialAnalysisForm"]["sfCurrentRatioScore"].value = round(sfCurrentRatioScore,1);
                 document.forms["FinancialAnalysisForm"]["sfDebtorDaysScore"].value = round(sfDebtorDaysScore,1);
				 document.forms["FinancialAnalysisForm"]["sfTurnoverToWorkingCapitalScore"].value = round(sfTurnoverToWorkingCapitalScore,1);
				 document.forms["FinancialAnalysisForm"]["sfTotalLiquidityRatiosScore"].value = round(sfLiquidityCategoryScore,1);
		
				
				
				 //document.forms["FinancialAnalysisForm"]["DebtServiceCategoryWeight"].value =Balancing;  
                
				//Recalculate and Display Effective Weights =  Total Score / Sub-Category Score
				
				//1. Effective Weights Recalculation - Big Firms
				bfCurrentRatioEffWeight = bfCurrentRatioScore /TotalScore * 100;
				bfDebtorDaysEffWeight = bfDebtorDaysScore/TotalScore * 100;
				bfTurnoverToWorkingCapitalEffWeight = bfTurnoverToWorkingCapitalScore/TotalScore * 100;
				bfTotalLiquidityRatiosEffWeight = bfLiquidityCategoryScore/TotalScore * 100;
			   //2. Effective Weights Recalculation - Small Firms
				sfCurrentRatioEffWeight = sfCurrentRatioScore /TotalScore * 100;
				sfDebtorDaysEffWeight = sfDebtorDaysScore/TotalScore * 100;
				sfTurnoverToWorkingCapitalEffWeight = sfTurnoverToWorkingCapitalScore/TotalScore * 100;
				sfTotalLiquidityRatiosEffWeight = sfLiquidityCategoryScore/TotalScore * 100;
			
			    //Display effective weights - Big Firms
				document.forms["FinancialAnalysisForm"]["bfCurrentRatioEffectiveWeight"].value = round(bfCurrentRatioEffWeight,1);
                document.forms["FinancialAnalysisForm"]["bfDebtorDaysEffectiveWeight"].value = round(bfDebtorDaysEffWeight,1);
                document.forms["FinancialAnalysisForm"]["bfTurnoverToWorkingCapitalEffectiveWeight"].value = round(bfTurnoverToWorkingCapitalEffWeight,1);
                document.forms["FinancialAnalysisForm"]["bfTotalLiquidityRatiosEffectiveWeight"].value = round(bfTotalLiquidityRatiosEffWeight,1);
				//Display effective weights - Small Firms
				document.forms["FinancialAnalysisForm"]["sfCurrentRatioEffectiveWeight"].value = round(sfCurrentRatioEffWeight,1);
                document.forms["FinancialAnalysisForm"]["sfDebtorDaysEffectiveWeight"].value = round(sfDebtorDaysEffWeight,1);
                document.forms["FinancialAnalysisForm"]["sfTurnoverToWorkingCapitalEffectiveWeight"].value = round(sfTurnoverToWorkingCapitalEffWeight,1);
                document.forms["FinancialAnalysisForm"]["sfTotalLiquidityRatiosEffectiveWeight"].value = round(sfTotalLiquidityRatiosEffWeight,1);
  
				  
				  }
			}
		}
        function RecalculateProfitabilityRatios(elem)
		{
           if (isNaN(elem.value))
		   {
		     alert ("Please enter numbers only");
			 elem.value =""; 
		   }
           else
		   {
		      var GrossProfitMarginWeight = ToNumber(document.forms["FinancialAnalysisForm"]["GrossProfitMarginWeight"].value);
		      var OperatingProfitMarginWeight = ToNumber(document.forms["FinancialAnalysisForm"]["OperatingProfitMarginWeight"].value);
		      var TurnoverGrowthWeight = ToNumber(document.forms["FinancialAnalysisForm"]["TurnoverGrowthWeight"].value);
		      var ReturnOnAssetsWeight = ToNumber(document.forms["FinancialAnalysisForm"]["ReturnOnAssetsWeight"].value);
		 	  var TotalProfitabilityRatiosInputsOnly = GrossProfitMarginWeight + OperatingProfitMarginWeight + TurnoverGrowthWeight + ReturnOnAssetsWeight;
		      var Balancing = 100 - TotalProfitabilityRatiosInputsOnly;
			  
			  
			  
			  if (TotalProfitabilityRatiosInputsOnly > 100)
		      {
		         alert("Total score may not exceed 100%");
				 elem.value = "";
				 
		      }
              else  
			    // Display Total Score;
			  {
			     document.forms["FinancialAnalysisForm"]["ReturnOnInvestmentsWeight"].value =Balancing;  
                 var TotalScore = ToNumber(document.forms["FinancialAnalysisForm"]["bfTotalScore"].value);
				 var bfProfitabilityCategoryScore = ToNumber(document.forms["FinancialAnalysisForm"]["bfProfitabilityCategoryScore"].value);
 				 var sfProfitabilityCategoryScore = ToNumber(document.forms["FinancialAnalysisForm"]["sfProfitabilityCategoryScore"].value);
             
				 //  1. Recalculate Scores - Big Firms
				 var bfGrossProfitMarginScore = bfProfitabilityCategoryScore * GrossProfitMarginWeight/100;
				 var bfOperatingProfitMarginScore = bfProfitabilityCategoryScore * OperatingProfitMarginWeight/100;
				 var bfTurnoverGrowthScore = bfProfitabilityCategoryScore * TurnoverGrowthWeight/100;
				 var bfReturnOnAssetsScore = bfProfitabilityCategoryScore * ReturnOnAssetsWeight/100;
		         var bfTotalProfitabilityRatiosScoreBeforeROI = bfGrossProfitMarginScore + bfOperatingProfitMarginScore + bfTurnoverGrowthScore + bfReturnOnAssetsScore;
				 // The ROI being the last charecteristic is the balancing score so that sum = Total Profitability Scores
				 var bfReturnOnInvestmentsScore = bfProfitabilityCategoryScore - bfTotalProfitabilityRatiosScoreBeforeROI ;
		        //  2. Recalculate Scores - Small Firms
				 var sfGrossProfitMarginScore = sfProfitabilityCategoryScore * GrossProfitMarginWeight/100;
				 var sfOperatingProfitMarginScore = sfProfitabilityCategoryScore * OperatingProfitMarginWeight/100;
				 var sfTurnoverGrowthScore = sfProfitabilityCategoryScore * TurnoverGrowthWeight/100;
				 var sfReturnOnAssetsScore = sfProfitabilityCategoryScore * ReturnOnAssetsWeight/100;
		         var sfTotalProfitabilityRatiosScoreBeforeROI = sfGrossProfitMarginScore + sfOperatingProfitMarginScore + sfTurnoverGrowthScore + sfReturnOnAssetsScore;
				 // The ROI being the last charecteristic is the balancing score so that sum = Total Profitability Scores
				 var sfReturnOnInvestmentsScore = sfProfitabilityCategoryScore - sfTotalProfitabilityRatiosScoreBeforeROI ;
		       
				
				
				 //3. Display Total Scores - Big Firms
			     document.forms["FinancialAnalysisForm"]["bfGrossProfitMarginScore"].value = round(bfGrossProfitMarginScore,1);
                 document.forms["FinancialAnalysisForm"]["bfOperatingProfitMarginScore"].value = round(bfOperatingProfitMarginScore,1);
				 document.forms["FinancialAnalysisForm"]["bfTurnoverGrowthScore"].value = round(bfTurnoverGrowthScore,1);
				 document.forms["FinancialAnalysisForm"]["bfReturnOnAssetsScore"].value = round(bfReturnOnAssetsScore,1);
				 document.forms["FinancialAnalysisForm"]["bfReturnOnInvestmentsScore"].value = round(bfReturnOnInvestmentsScore,1);
				 document.forms["FinancialAnalysisForm"]["bfTotalProfitabilityRatiosScore"].value = round(bfProfitabilityCategoryScore,1);
				 //4. Display Total Scores - Small Firms
			     document.forms["FinancialAnalysisForm"]["sfGrossProfitMarginScore"].value = round(sfGrossProfitMarginScore,1);
                 document.forms["FinancialAnalysisForm"]["sfOperatingProfitMarginScore"].value = round(sfOperatingProfitMarginScore,1);
				 document.forms["FinancialAnalysisForm"]["sfTurnoverGrowthScore"].value = round(sfTurnoverGrowthScore,1);
				 document.forms["FinancialAnalysisForm"]["sfReturnOnAssetsScore"].value = round(sfReturnOnAssetsScore,1);
				 document.forms["FinancialAnalysisForm"]["sfReturnOnInvestmentsScore"].value = round(sfReturnOnInvestmentsScore,1);
				 document.forms["FinancialAnalysisForm"]["sfTotalProfitabilityRatiosScore"].value = round(sfProfitabilityCategoryScore,1);
				
				
				
				 //document.forms["FinancialAnalysisForm"]["DebtServiceCategoryWeight"].value =Balancing;  
                
				//Recalculate and Display Effective Weights =  Total Score / Sub-Category Score
				
				//1. Effetive Weights Recalculation - Big Firms
				var bfGrossProfitEffWeight = bfGrossProfitMarginScore /TotalScore * 100;
				var bfOperatingProfitEffWeight = bfOperatingProfitMarginScore/TotalScore * 100;
				var bfTurnoverGrowthEffWeight = bfTurnoverGrowthScore/TotalScore * 100;
		        var bfROAEffWeight = bfReturnOnAssetsScore/TotalScore * 100;
			    var bfROIEffWeight = bfReturnOnInvestmentsScore/TotalScore * 100;
				var bfTotalProfitabilityRatiosEffWeight = bfProfitabilityCategoryScore/TotalScore * 100;
				//2. Effetive Weights Recalculation - Small Firms
				var sfGrossProfitEffWeight = sfGrossProfitMarginScore /TotalScore * 100;
				var sfOperatingProfitEffWeight = sfOperatingProfitMarginScore/TotalScore * 100;
				var sfTurnoverGrowthEffWeight = sfTurnoverGrowthScore/TotalScore * 100;
		        var sfROAEffWeight = sfReturnOnAssetsScore/TotalScore * 100;
			    var sfROIEffWeight = sfReturnOnInvestmentsScore/TotalScore * 100;
				var sfTotalProfitabilityRatiosEffWeight = sfProfitabilityCategoryScore/TotalScore * 100;
			
			    //3. Display Effetive Weights Recalculation - Big Firms
				document.forms["FinancialAnalysisForm"]["bfGrossProfitMarginEffectiveWeight"].value = round(bfGrossProfitEffWeight,1);
                document.forms["FinancialAnalysisForm"]["bfOperatingProfitMarginEffectiveWeight"].value = round(bfOperatingProfitEffWeight,1);
                document.forms["FinancialAnalysisForm"]["bfTurnoverGrowthEffectiveWeight"].value = round(bfTurnoverGrowthEffWeight,1);
                document.forms["FinancialAnalysisForm"]["bfReturnOnAssetsEffectiveWeight"].value = round(bfROAEffWeight,1);
                document.forms["FinancialAnalysisForm"]["bfReturnOnInvestmentsEffectiveWeight"].value = round(bfTotalProfitabilityRatiosEffWeight,1); 		  
		        document.forms["FinancialAnalysisForm"]["bfTotalProfitabilityRatiosEffectiveWeight"].value = round(bfTotalProfitabilityRatiosEffWeight,1);
 			    //4. Display Effetive Weights Recalculation - Small Firms
				document.forms["FinancialAnalysisForm"]["sfGrossProfitMarginEffectiveWeight"].value = round(sfGrossProfitEffWeight,1);
                document.forms["FinancialAnalysisForm"]["sfOperatingProfitMarginEffectiveWeight"].value = round(sfOperatingProfitEffWeight,1);
                document.forms["FinancialAnalysisForm"]["sfTurnoverGrowthEffectiveWeight"].value = round(sfTurnoverGrowthEffWeight,1);
                document.forms["FinancialAnalysisForm"]["sfReturnOnAssetsEffectiveWeight"].value = round(sfROAEffWeight,1);
                document.forms["FinancialAnalysisForm"]["sfReturnOnInvestmentsEffectiveWeight"].value = round(sfTotalProfitabilityRatiosEffWeight,1); 		  
		        document.forms["FinancialAnalysisForm"]["sfTotalProfitabilityRatiosEffectiveWeight"].value = round(sfTotalProfitabilityRatiosEffWeight,1);
            		}
			}
		}
		function RecalculateCapitalStructureRatios(elem)
		{
           if (isNaN(elem.value))
		   {
		     alert ("Please enter numbers only");
			 elem.value =""; 
		   }
           else
		   {
		      var DebtToEquityWeight = ToNumber(document.forms["FinancialAnalysisForm"]["DebtToEquityWeight"].value);
		      var DebtToTangibleNetWorthWeight = ToNumber(document.forms["FinancialAnalysisForm"]["DebtToTangibleNetWorthWeight"].value);
		 	  var TotalCapitalStructureRatiosInputsOnly = DebtToEquityWeight + DebtToTangibleNetWorthWeight;
		      var Balancing = 100 - TotalCapitalStructureRatiosInputsOnly;
			  
			  
			  
			  if (TotalCapitalStructureRatiosInputsOnly > 100)
		      {
		         alert("Total score may not exceed 100%");
				 elem.value = "";
				 
		      }
              else  
			    // Display Total Score;
			  {
			     document.forms["FinancialAnalysisForm"]["ShareholdersFundsToTotalAssetsWeight"].value =round(Balancing,1);  
                 var TotalScore = ToNumber(document.forms["FinancialAnalysisForm"]["bfTotalScore"].value);
				 var bfCapitalStructureCategoryScore = ToNumber(document.forms["FinancialAnalysisForm"]["bfCapitalStructureCategoryScore"].value);
  				 var sfCapitalStructureCategoryScore = ToNumber(document.forms["FinancialAnalysisForm"]["sfCapitalStructureCategoryScore"].value);
             
				 //1. Recalculate Scores - Big Firms
				 var bfDebtToEquityScore = bfCapitalStructureCategoryScore * DebtToEquityWeight/100;
				 var bfDebtToTangibleNetWorthScore = bfCapitalStructureCategoryScore * DebtToTangibleNetWorthWeight/100;
			     var bfTotalCapitalStructureScoreBeforeLast = bfDebtToEquityScore + bfDebtToTangibleNetWorthScore;
				     // The ROI being the last charecteristic is the balancing score so that sum = Total Capital Structure Scores
				 var bfShareholdersFundsToTotalAssetsScore = bfCapitalStructureCategoryScore - bfTotalCapitalStructureScoreBeforeLast ;
																					 
				 //2. Recalculate Scores - Small Firms
				 var sfDebtToEquityScore = sfCapitalStructureCategoryScore * DebtToEquityWeight/100;
				 var sfDebtToTangibleNetWorthScore = sfCapitalStructureCategoryScore * DebtToTangibleNetWorthWeight/100;
			     var sfTotalCapitalStructureScoreBeforeLast = sfDebtToEquityScore + sfDebtToTangibleNetWorthScore;
				 // The ROI being the last charecteristic is the balancing score so that sum = Total Capital Structure Scores
				 var sfShareholdersFundsToTotalAssetsScore = sfCapitalStructureCategoryScore - sfTotalCapitalStructureScoreBeforeLast ;
		       
				
				 //3. Display Total Scores - Big Firms
			     document.forms["FinancialAnalysisForm"]["bfDebtToEquityScore"].value = round(bfDebtToEquityScore,1);
                 document.forms["FinancialAnalysisForm"]["bfDebtToTangibleNetWorthScore"].value = round(bfDebtToTangibleNetWorthScore,1);
				 document.forms["FinancialAnalysisForm"]["bfShareholdersFundsToTotalAssetsScore"].value = round(bfShareholdersFundsToTotalAssetsScore,1);
				 document.forms["FinancialAnalysisForm"]["bfTotalCapitalStructureRatiosScore"].value = round(bfCapitalStructureCategoryScore,1);
				 //4. Display Total Scores - Small Firms
			     document.forms["FinancialAnalysisForm"]["sfDebtToEquityScore"].value = round(sfDebtToEquityScore,1);
                 document.forms["FinancialAnalysisForm"]["sfDebtToTangibleNetWorthScore"].value = round(sfDebtToTangibleNetWorthScore,1);
				 document.forms["FinancialAnalysisForm"]["sfShareholdersFundsToTotalAssetsScore"].value = round(sfShareholdersFundsToTotalAssetsScore,1);
				 document.forms["FinancialAnalysisForm"]["sfTotalCapitalStructureRatiosScore"].value = round(sfCapitalStructureCategoryScore,1);
	
                
				//5. Big Firms - Recalculate and Display Effective Weights =  Total Score / Sub-Category Score
				
				bfDebtToEquityWeight = bfDebtToEquityScore /TotalScore * 100;
				bfDebtToTangibleNetWorthWeight = bfDebtToTangibleNetWorthScore/TotalScore * 100;
				bfShareholdersFundsToTotalAssetsWeight = bfShareholdersFundsToTotalAssetsScore/TotalScore * 100;
		     	bfTotalCapitalStructureRatiosWeight = bfCapitalStructureCategoryScore/TotalScore * 100;
				
				//6. Small Firms - Recalculate and Display Effective Weights =  Total Score / Sub-Category Score
				
				sfDebtToEquityWeight = sfDebtToEquityScore /TotalScore * 100;
				sfDebtToTangibleNetWorthWeight = sfDebtToTangibleNetWorthScore/TotalScore * 100;
				sfShareholdersFundsToTotalAssetsWeight = sfShareholdersFundsToTotalAssetsScore/TotalScore * 100;
		     	sfTotalCapitalStructureRatiosWeight = sfCapitalStructureCategoryScore/TotalScore * 100;
			
			    //7. Display effective weights - Big Firms
				document.forms["FinancialAnalysisForm"]["bfDebtToEquityEffectiveWeight"].value = round(bfDebtToEquityWeight,1);
                document.forms["FinancialAnalysisForm"]["bfDebtToTangibleNetWorthEffectiveWeight"].value = round(bfDebtToTangibleNetWorthWeight,1);
                document.forms["FinancialAnalysisForm"]["bfShareholdersFundsToTotalAssetsEffectiveWeight"].value = round(bfShareholdersFundsToTotalAssetsWeight,1);
                document.forms["FinancialAnalysisForm"]["bfTotalCapitalStructureRatiosEffectiveWeight"].value = round(bfTotalCapitalStructureRatiosWeight,1); 		  
			    //8. Display effective weights - Small Firms
				document.forms["FinancialAnalysisForm"]["sfDebtToEquityEffectiveWeight"].value = round(sfDebtToEquityWeight,1);
                document.forms["FinancialAnalysisForm"]["sfDebtToTangibleNetWorthEffectiveWeight"].value = round(sfDebtToTangibleNetWorthWeight,1);
                document.forms["FinancialAnalysisForm"]["sfShareholdersFundsToTotalAssetsEffectiveWeight"].value = round(sfShareholdersFundsToTotalAssetsWeight,1);
                document.forms["FinancialAnalysisForm"]["sfTotalCapitalStructureRatiosEffectiveWeight"].value = round(sfTotalCapitalStructureRatiosWeight,1); 		  
    
  }
			}
		}
		function RecalculateDebtServiceRatios(elem)
		
		{
           
		   if (isNaN(elem.value))
		   {
		     alert ("Please enter numbers only");
			 elem.value =""; 
		   }
           else
		   {
		      var InterestCoverWeight = ToNumber(document.forms["FinancialAnalysisForm"]["InterestCoverWeight"].value);
		      var DebtServiceRatiosInputsOnly = InterestCoverWeight;
		      var Balancing = 100 - DebtServiceRatiosInputsOnly;
			  
			  
			  
			  if (DebtServiceRatiosInputsOnly > 100)
		      {
		         alert("Total score may not exceed 100%");
				 elem.value = "";
				 
		      }
              else  
			    // Display Total Score;
			  {
			     document.forms["FinancialAnalysisForm"]["EBITDAToGrossIntDebtsWeight"].value =Balancing;  
                 var TotalScore = ToNumber(document.forms["FinancialAnalysisForm"]["bfTotalScore"].value);
				 var bfDebtServiceCategoryScore = ToNumber(document.forms["FinancialAnalysisForm"]["bfDebtServiceCategoryScore"].value);
				 var sfDebtServiceCategoryScore = ToNumber(document.forms["FinancialAnalysisForm"]["sfDebtServiceCategoryScore"].value);
              
				 //1. Recalculate Scores - Big Firms
				 var bfInterestCoverScore = bfDebtServiceCategoryScore * InterestCoverWeight/100;
			     var bfTotalDebtServiceScoreBeforeLast = bfInterestCoverScore;
		             // The EBITDAToGrossIntDebts being the last charecteristic is the balancing score so that sum = Total Debt Service Scores
				 var bfEBITDAToGrossIntDebtsScore = bfDebtServiceCategoryScore - bfTotalDebtServiceScoreBeforeLast ;
					
				 //2. Recalculate Scores - Small Firms
				 var sfInterestCoverScore = sfDebtServiceCategoryScore * InterestCoverWeight/100;
			     var sfTotalDebtServiceScoreBeforeLast = sfInterestCoverScore;
			 
				 // The EBITDAToGrossIntDebts being the last charecteristic is the balancing score so that sum = Total Debt Service Scores
				 var sfEBITDAToGrossIntDebtsScore = sfDebtServiceCategoryScore - sfTotalDebtServiceScoreBeforeLast ;
		       
				
				 //3. Display Total Scores - Big Firms
			     document.forms["FinancialAnalysisForm"]["bfInterestCoverScore"].value = round(bfInterestCoverScore,1);
                 document.forms["FinancialAnalysisForm"]["bfEBITDAToGrossIntDebtsScore"].value = round(bfEBITDAToGrossIntDebtsScore,1);
				 document.forms["FinancialAnalysisForm"]["bfTotalDebtServiceRatiosScore"].value = round(bfDebtServiceCategoryScore,1);
				
				 //4. Display Total Scores - Big Firms
			     document.forms["FinancialAnalysisForm"]["sfInterestCoverScore"].value = round(sfInterestCoverScore,1);
                 document.forms["FinancialAnalysisForm"]["sfEBITDAToGrossIntDebtsScore"].value = round(sfEBITDAToGrossIntDebtsScore,1);
				 document.forms["FinancialAnalysisForm"]["sfTotalDebtServiceRatiosScore"].value = round(sfDebtServiceCategoryScore,1);
				
                
				//5. Big Firms - Recalculate and Display Effective Weights =  Total Score / Sub-Category Score
				
				bfInterestCoverWeight = bfInterestCoverScore /TotalScore * 100;
				bfEBITDAToGrossIntDebtsWeight = bfEBITDAToGrossIntDebtsScore/TotalScore * 100;
		     	bfTotalDebtServiceRatiosWeight = bfDebtServiceCategoryScore/TotalScore * 100;
				//6. Small Firms - Recalculate and Display Effective Weights =  Total Score / Sub-Category Score
				
				sfInterestCoverWeight = sfInterestCoverScore /TotalScore * 100;
				sfEBITDAToGrossIntDebtsWeight = sfEBITDAToGrossIntDebtsScore/TotalScore * 100;
		     	sfTotalDebtServiceRatiosWeight = sfDebtServiceCategoryScore/TotalScore * 100;
			
			   //7. Display effective weights - Big Firms
				document.forms["FinancialAnalysisForm"]["bfInterestCoverEffectiveWeight"].value = round(bfInterestCoverWeight,1);
                document.forms["FinancialAnalysisForm"]["bfEBITDAToGrossIntDebtsEffectiveWeight"].value = round(bfEBITDAToGrossIntDebtsWeight,1);
                document.forms["FinancialAnalysisForm"]["bfTotalDebtServiceRatiosEffectiveWeight"].value = round(bfTotalDebtServiceRatiosWeight,1); 
			   //8. Display effective weights - Small Firm
				document.forms["FinancialAnalysisForm"]["sfInterestCoverEffectiveWeight"].value = round(sfInterestCoverWeight,1);
                document.forms["FinancialAnalysisForm"]["sfEBITDAToGrossIntDebtsEffectiveWeight"].value = round(sfEBITDAToGrossIntDebtsWeight,1);
                document.forms["FinancialAnalysisForm"]["sfTotalDebtServiceRatiosEffectiveWeight"].value = round(sfTotalDebtServiceRatiosWeight,1); 		  
				}
			}
			                                                                                                      
		}
		function bfRecalculate(elem)
		{
           if (isNaN(elem.value))
		   {
		     alert ("Please enter numbers only");
			 elem.value =""; 
		   }
           else
		   {
		      var bfFinancialAnalysis = Number(document.forms["FinancialAnalysisForm"]["bfFinancialAnalysisPercentage"].value);
		      var bfManagementAnalysis = Number(document.forms["FinancialAnalysisForm"]["bfManagementAnalysisPercentage"].value);
		      var bfIndustryAnalysis = Number(document.forms["FinancialAnalysisForm"]["bfIndustryAnalysisPercentage"].value);
		      var bfShareholderAnalysis = Number(document.forms["FinancialAnalysisForm"]["bfShareholderAnalysisPercentage"].value);
		      var bfBehavioralAnalysis = Number(document.forms["FinancialAnalysisForm"]["bfBehavioralAnalysisPercentage"].value);
			  var bfTotalPercentage = bfFinancialAnalysis + bfManagementAnalysis + bfIndustryAnalysis + bfShareholderAnalysis + bfBehavioralAnalysis;
		      var bfTotalScore = Number(document.forms["FinancialAnalysisForm"]["bfTotalScore"].value);
	
			  //var bfBalancing = 100 - bfTotalPercentage;
			  
			  
			  if (bfTotalPercentage > 100)
		      {
		         alert("Total score may not exceed 100%");
				 elem.value = "";
				 
		      }
              else  
			    // Display Total Score;
			  {
			    document.forms["FinancialAnalysisForm"]["bfTotalPercentage"].value = round(bfTotalPercentage,1);  
                document.forms["FinancialAnalysisForm"]["bfFinancialAnalysisScore"].value = round(bfTotalScore * bfFinancialAnalysis / 100,1);
                document.forms["FinancialAnalysisForm"]["bfManagementAnalysisScore"].value = round(bfTotalScore * bfManagementAnalysis / 100,1);
		        document.forms["FinancialAnalysisForm"]["bfIndustryAnalysisScore"].value = round(bfTotalScore * bfIndustryAnalysis / 100,1);
				document.forms["FinancialAnalysisForm"]["bfShareholderAnalysisScore"].value = round(bfTotalScore * bfShareholderAnalysis / 100,1);
				document.forms["FinancialAnalysisForm"]["bfBehavioralAnalysisScore"].value = round(bfTotalScore * bfBehavioralAnalysis / 100,1);
			   
	            // Updata Small Firms Total Score = Big Firm Total Score
				if (elem.name=="bfTotalScore")
				{
				  document.forms["FinancialAnalysisForm"]["sfTotalScore"].value = elem.value;
	            }
			    //document.forms["FinancialAnalysisForm"]["bfEstablishmentAnalysisPercentage"].value = bfBalancing;
			  }
			}
		}
		
		function sfRecalculate(elem)
		{
           if (isNaN(elem.value))
		   {
		     alert ("Please enter numbers only");
			 elem.value =""; 
		   }
           else
		   {
		      
			  var sfFinancialAnalysis = Number(document.forms["FinancialAnalysisForm"]["sfFinancialAnalysisPercentage"].value);
		      var sfManagementAnalysis = Number(document.forms["FinancialAnalysisForm"]["sfManagementAnalysisPercentage"].value);
		      var sfIndustryAnalysis = Number(document.forms["FinancialAnalysisForm"]["sfIndustryAnalysisPercentage"].value);
		      var sfShareholderAnalysis = Number(document.forms["FinancialAnalysisForm"]["sfShareholderAnalysisPercentage"].value);
		      var sfBehavioralAnalysis = Number(document.forms["FinancialAnalysisForm"]["sfBehavioralAnalysisPercentage"].value);
			  var sfTotalPercentage = sfFinancialAnalysis + sfManagementAnalysis + sfIndustryAnalysis + sfShareholderAnalysis + sfBehavioralAnalysis;
		      var sfTotalScore = Number(document.forms["FinancialAnalysisForm"]["bfTotalScore"].value);
	
			  //var sfBalancing = 100 - sfTotalPercentage;
			  
			  
			  if (sfTotalPercentage > 100)
		      {
		         alert("Total score may not exceed 100%");
				 elem.value = "";
				 
		      }
              else  
			    // Display Total Score;
			  {
			    document.forms["FinancialAnalysisForm"]["sfTotalPercentage"].value = round(sfTotalPercentage,1);  
                document.forms["FinancialAnalysisForm"]["sfFinancialAnalysisScore"].value = round(sfTotalScore * sfFinancialAnalysis / 100,1);
                document.forms["FinancialAnalysisForm"]["sfManagementAnalysisScore"].value = round(sfTotalScore * sfManagementAnalysis / 100,1);
		        document.forms["FinancialAnalysisForm"]["sfIndustryAnalysisScore"].value = round(sfTotalScore * sfIndustryAnalysis / 100,1);
				document.forms["FinancialAnalysisForm"]["sfShareholderAnalysisScore"].value = round(sfTotalScore * sfShareholderAnalysis / 100,1);
				document.forms["FinancialAnalysisForm"]["sfBehavioralAnalysisScore"].value = round(sfTotalScore * sfBehavioralAnalysis / 100,1);
				document.forms["FinancialAnalysisForm"]["sfTotalScore"].value = round(sfTotalScore,1);
			   
			     
  
                //document.forms["FinancialAnalysisForm"]["sfEstablishmentAnalysisPercentage"].value = sfBalancing;
			  }
			}
		}
	  function Thousands_Separators(num)
      {
         numStr = num+= "";
		// var num_parts = num.toString().split(".");
         //num_parts[0] = num_parts[0].replace(/\B(?=(\d{3})+(?!\d))/g, ",");
        return numStr.replace(/\B(?=(\d{3})+(?!\d))/g, ",");
		//return num_parts.join(".");
	
      }		
		
    </script>
</head>
<body>
   <form id = "FinancialAnalysisForm" method ="post" action = "SaveSettings2.php" onclick = "RecalculateForm('Ignore')">
   <Table Border = 2 border-style = 2 align = center>
      <tr bgcolor = blue color = white>
	       <th colspan = 3 style = "color:white"><h1>FINANCIAL ANALYSIS SETTINGS<h1></td>
		   
	  </tr>
	  <tr>
	      <td style = "vertical-align:top" >
		      <table Border = 0 border-style = 2 align = top >
   			     <tr> <td><strong>Big Firms Calibration<strong></td> 
				      <td></td>
					  <td></td>
				 </tr> 
				 <tr> <td></td>
				      <td colspan = 2  align = center>BIG FIRMS</td> 
				  </tr>
				 <tr> 
				      <td></td>
					  <td align = center><strong>%<strong></td>
					  <td><strong>Score<strong></td>
				 </tr>
				 <tr> 
				      <td><strong>Total Scores<strong></td>
					  <td><input style = "text-align:right;
										  color:white;
										  background-color:blue" 
								  size = "1" type = text readonly name = "bfTotalPercentage" value = "100" readonly>
					  </td>
					  <td>
					      <input class = "price" size = "1" type = text name = "bfTotalScore" onchange="bfRecalculate(this)" style = "text-align:right">
					  </td>
				 </tr>
				 <tr> 
				      <td><strong>Made up of:</td>
					  <td></td><td></td>
				 </tr>
				 <tr> 
				      <td><a href ="Settings3.htm">Financial Analysis</a></td>
					  <td><input class = "price" size = "1" type = text name = "bfFinancialAnalysisPercentage" onchange="bfRecalculate(this)">%</td>
					  <td><input style = "text-align:right;
										  color:white;
										  background-color:grey"
								readonly size = "1" type = text name = "bfFinancialAnalysisScore">
					  </td>
				 </tr>
				 <tr> 
				      <td><a href = "Settings3.htm"> Management Analysis </a></td>
					  <td><input class = "price" size = "1" type = text name = "bfManagementAnalysisPercentage" onchange="bfRecalculate(this)">%</td>
					  <td><input style = "text-align:right;
										  color:white;
										  background-color:grey"
								 readonly size = "1" type = text name = "bfManagementAnalysisScore"></td>
				 </tr>
				 <tr> 
				      <td><a href = "Settings3.htm">Industry Analysis</a></td>
					  <td><input class = "price" size = "1" type = text name = "bfIndustryAnalysisPercentage" onchange="bfRecalculate(this)" >%</td>
					  <td><input style = "text-align:right;
										  color:white;
										  background-color:grey"
								 readonly size = "1" type = text name = "bfIndustryAnalysisScore"></td>
				 </tr>
			    <tr> 
				      <td><a href = "Settings3.htm">Shareholder Analysis</a></td>
					  <td><input class = "price" size = "1" type = text name = "bfShareholderAnalysisPercentage" onchange="bfRecalculate(this)">%</td>
					  <td><input style = "text-align:right;
										  color:white;
										  background-color:grey"
								 readonly size = "1" type = text name = "bfShareholderAnalysisScore"></td>
				</tr>
				<tr> 
				      <td><a href = "Settings3.htm">Behavioral & Product Analysis (Balancing)</a></td>
					  <td><input class = "price" size = "1" type = text name = "bfBehavioralAnalysisPercentage" onchange="bfRecalculate(this)">%</td>
					  <td><input style = "text-align:right;
										  color:white;
										  background-color:grey"
								 readonly size = "1" type = text name = "bfBehavioralAnalysisScore"></td>
				 </tr>
				 <tr>
	                <td></td>
	                <td> <Button type = submit name = "BtnSave" onclick = "SaveData()">Save</Button> </td>
	             </tr>
		         <!-Markup for small tables>
   			     <tr> <td><strong>Small Firms Calibration<strong></td> 
				      <td></td>
					  <td></td>
				 </tr> 
				 <tr> <td></td>
				      <td colspan = 2  align = center>SMALL FIRMS</td> 
				  </tr>
				 <tr> 
				      <td></td>
					  <td align = center><strong>%<strong></td>
					  <td><strong>Score<strong></td>
				 </tr>
				 <tr> 
				      <td><strong>Total Scores<strong></td>
					  <td><input style = "text-align:right;
										  color:white;
										  background-color:blue" 
								 size = "1" type = text readonly name = "sfTotalPercentage" value = "100" onchange="sfRecalculate(this)">%
					  </td>
					  <td>
					      <input size = "1" type = text name = "sfTotalScore" readonly style = "background-color:blue;color:white;text-align:right">
					  </td>
				 </tr>
				 <tr> 
				      <td><strong>Made up of:</td>
					  <td></td><td></td>
				 </tr>
				 <tr> 
				      <td><a href ="Settings2.htm">Financial Analysis</a></td>
					  <td><input class = "price" size = "1" type = text name = "sfFinancialAnalysisPercentage" onchange="sfRecalculate(this)">%</td>
					  <td><input style = "text-align:right;
										  color:white;
										  background-color:grey"
								readonly size = "1" type = text name = "sfFinancialAnalysisScore">
					  </td>
				 </tr>
				 <tr> 
				      <td><a href = "Settings3.htm"> Management Analysis </a></td>
					  <td><input class = "price" size = "1" type = text name = "sfManagementAnalysisPercentage" onchange="sfRecalculate(this)">%</td>
					  <td><input style = "text-align:right;
										  color:white;
										  background-color:grey"
								 readonly size = "1" type = text name = "sfManagementAnalysisScore"></td>
				 </tr>
				 <tr> 
				      <td><a href = "Settings3.htm">Industry Analysis</a></td>
					  <td><input class = "price" size = "1" type = text name = "sfIndustryAnalysisPercentage" onchange="sfRecalculate(this)" >%</td>
					  <td><input style = "text-align:right;
										  color:white;
										  background-color:grey"
								 readonly size = "1" type = text name = "sfIndustryAnalysisScore"></td>
				 </tr>
			    <tr> 
				      <td><a href = "Settings3.htm">Shareholder Analysis</a></td>
					  <td><input class = "price" size = "1" type = text name = "sfShareholderAnalysisPercentage" onchange="sfRecalculate(this)">%</td>
					  <td><input style = "text-align:right;
										  color:white;
										  background-color:grey"
								 readonly size = "1" type = text name = "sfShareholderAnalysisScore"></td>
				</tr>
				<tr> 
				      <td><a href = "Settings3.htm">Behavioral & Product Analysis (Balancing)</a></td>
					  <td><input class = "price" size = "1" type = text name = "sfBehavioralAnalysisPercentage" onchange="sfRecalculate(this)">%</td>
					  <td><input style = "text-align:right;
										  color:white;
										  background-color:grey"
								 readonly size = "1" type = text name = "sfBehavioralAnalysisScore"></td>
				 </tr>
				 <!-Markup for other settings>
   			     <tr><td>.</td></tr>
				 <tr style = "background-color:lightgrey" > <td><strong>Firm Size Settings<strong></td> 
				      <td></td>
					  <td></td>
				 </tr> 
	             <tr><td>.</td></tr>
				 <tr>
				      <td colspan = 3>Firm Size Turnover Threshold......<input size = 8 type = text name = "TurnoverThreshold" class = "price" style = "text-align:right"></td>
				 </tr>
				 <tr><td>.</td></tr>
				 <tr style = "background-color:lightgrey" > 
				      <td colspan = 3><strong>3 Year Ratio Analysis Weights Settings<strong></td> 
				      <td></td>
					  <td></td>
				 </tr> 
				 <tr><td>.</td></tr>
				 <tr align = right>
					  <td><strong>Year 1%</strong></td>
				      <td><strong>Year 2%</strong></td>
				      <td><strong>Year 3%</strong></td>
				 </tr>
				 <tr align = right>
					  <td>Ratio Analysis Weights:................<input class = "price" type size = 1 type = text name = "RatioWeightYear1"  style = "text-align:right">%</td>
						 <td><input type = text name = "sfTotalFinancialAnalysisCategoryEffectiveWeight" Size = 1 readonly">%</td>
				      <td><input class = "price" type size = 1 type = text name = "RatioWeightYear2" style = "text-align:right">%</td>
				      <td><input class = "price" type size = 1 type = text name = "RatioWeightYear3" style = "text-align:right">%</td>
				 </tr>
				 <tr>
	                <td></td>
	                <td> <Button type = submit name = "BtnSave" onclick = "SaveData()">Save</Button> </td>
	             </tr>
			  
 				 
			  </table>
		  </td>
		  <!-Gap>
		  <td><table Border = 1 Bordercolor = yellow> <tr> <td color=white></td> </tr> </Table> </td> 
		  
			
		  <td align = top>
			      <table align = top>
				     <tr style = "background-color:powderblue;text-align:center">
					    <td style = "text-align:left" rowspan = 2><br> <strong>FINANCIAL ANALYSIS RATIOS<strong></td>
						<td rowspan = 2><strong>%<br> WEIGHT<strong></td>
						<td colspan = 2><strong>EFFECTIVE WEIGHT</strong></td>
						<td colspan = 2><strong>SCORE ALLOCATION<strong></td>
					 </tr>
					  <tr style = "background-color:powderblue;text-align:center">
					    <td>Big<br>Firm</td>
						<td>Small<br>Firm</td>
						<td>Big<br>Firm</td>
						<td>Small<br>Firm</td>
					 </tr>
					 <tr align = center>
					    <td align = left>Liquidity</td>
						<td><input class = "price" style = "align:center" type = text name = "LiquidityCategoryWeight" Size = 1 onchange = "RecalculateFinancialAnalysisWeights(this)"></td>
                        <td><input type = text name = "bfLiquidityCategoryEffectiveWeight" Size = 1 readonly>%</td>
				        <td><input type = text name = "sfLiquidityCategoryEffectiveWeight" Size = 1 readonly>%</td>
				        <td><input type = text name = "bfLiquidityCategoryScore" Size = 1 readonly></td>
				        <td><input type = text name = "sfLiquidityCategoryScore" Size = 1 readonly></td>
				  
					  </tr>
					  <tr align = center>
					    <td align = left>Profitability</td>
						<td><input class = "price" type = text name = "ProfitabilityCategoryWeight" Size = 1 onchange = "RecalculateFinancialAnalysisWeights(this)"></td>
						<td><input type = text name = "bfProfitabilityCategoryEffectiveWeight" Size = 1 readonly>%</td>
						<td><input type = text name = "sfProfitabilityCategoryEffectiveWeight" Size = 1 readonly>%</td>
					    <td><input type = text name = "bfProfitabilityCategoryScore" Size = 1 readonly></td>
					    <td><input type = text name = "sfProfitabilityCategoryScore" Size = 1 readonly></td>
					   </tr>
					   <tr align = center>
	                    <td align = left>Capital Structure</td>
						<td><input class = "price" type = text name = "CapitalStructureCategoryWeight" Size = 1 onchange = "RecalculateFinancialAnalysisWeights(this)"></td>
						<td><input type = text name = "bfCapitalStructureCategoryEffectiveWeight" Size = 1 readonly>%</td>
						<td><input type = text name = "sfCapitalStructureCategoryEffectiveWeight" Size = 1 readonly>%</td>
						<td><input type = text name = "bfCapitalStructureCategoryScore" Size = 1 readonly></td>
						<td><input type = text name = "sfCapitalStructureCategoryScore" Size = 1 readonly></td>
							</tr>
					   <tr align = center> 
				        <td align = left>Debt Service (Balancing)</td>
						<td><input type = text name = "DebtServiceCategoryWeight" Size = 1 value = 100 readonly></td>
						<td><input type = text name = "bfDebtServiceCategoryEffectiveWeight" Size = 1 readonly>%</td>
                        <td><input type = text name = "sfDebtServiceCategoryEffectiveWeight" Size = 1 readonly>%</td>
						<td><input type = text name = "bfDebtServiceCategoryScore" Size = 1 readonly></td>
						<td><input type = text name = "sfDebtServiceCategoryScore" Size = 1 readonly></td>
					   </tr>
					   <tr align = center>
					     <td align = left>TOTAL</td>
						 <td><input type = text name = "TotalFinancialAnalysisCategoryWeight" Size = 1 value = 100 readonly></td>
						 <td><input type = text name = "bfTotalFinancialAnalysisCategoryEffectiveWeight" Size = 1 readonly">%</td>
						 <td><input type = text name = "bfTotalFinancialAnalysisCategoryScore" Size = 1 readonly></td>
						 <td><input type = text name = "sfTotalFinancialAnalysisCategoryScore" Size = 1 readonly></td>
					    </tr
						<tr></tr>
						<tr>
						   <td><strong>Drilled Down As Follows:<strong></td>
						</tr>
						
						<tr><td colspan = 6>____________________________________________________________________________________________</td></tr>
						<!-- Level 3 Definitions -->
                       <tr></tr>	   
				        <tr style = "background-color:lightgrey" >
					        <td><strong>Liquidity Ratios </strong></td>	
					    </tr>
					    <tr align = center>
					        <td align = left>Current Ratio</td>
						    <td><input class = "price" type = text name = "CurrentRatioWeight" Size = 1 onchange = RecalculateLiquidityRatios(this)></td>
							<td><input type = text name = "bfCurrentRatioEffectiveWeight" Size = 1 readonly>%</td>
							<td><input type = text name = "sfCurrentRatioEffectiveWeight" Size = 1 readonly>%</td>
							<td><input type = text name = "bfCurrentRatioScore" Size = 1 readonly></td>
							<td><input type = text name = "sfCurrentRatioScore" Size = 1 readonly></td>
					    </tr>
					    <tr align = center>
					         <td align = left>Debtor Days</td>
						     <td><input class = "price" type = text name = "DebtorDaysWeight" Size = 1 onchange = RecalculateLiquidityRatios(this)></td>
							 <td><input type = text name = "bfDebtorDaysEffectiveWeight" Size = 1 readonly>%</td>
							 <td><input type = text name = "sfDebtorDaysEffectiveWeight" Size = 1 readonly>%</td>
							 <td><input type = text name = "bfDebtorDaysScore" Size = 1 readonly></td>
							 <td><input type = text name = "sfDebtorDaysScore" Size = 1 readonly></td>
					    </tr>
					    <tr align = center>
	                         <td align = left>Turnover/Working Capital(Balancing)</td>
						     <td><input type = text name = "TurnoverToWorkingCapitalWeight" Size = 1 value = 100 readonly></td>
							 <td><input type = text name = "bfTurnoverToWorkingCapitalEffectiveWeight" Size = 1 readonly>%</td>
							 <td><input type = text name = "sfTurnoverToWorkingCapitalEffectiveWeight" Size = 1 readonly>%</td>
							 <td><input type = text name = "bfTurnoverToWorkingCapitalScore" Size = 1 readonly></td>
							 <td><input type = text name = "sfTurnoverToWorkingCapitalScore" Size = 1 readonly></td>
					    </tr>
					    <tr align = center>
					         <td align = left>TOTAL</td>
						     <td><input type = text name = "TotalLiquidityRatiosWeight" Size = 1 value = 100 readonly></td>
							 <td><input type = text name = "bfTotalLiquidityRatiosEffectiveWeight" Size = 1 readonly>%</td>
							 <td><input type = text name = "sfTotalLiquidityRatiosEffectiveWeight" Size = 1 readonly>%</td>
							 <td><input type = text name = "bfTotalLiquidityRatiosScore" Size = 1 readonly></td>
							 <td><input type = text name = "sfTotalLiquidityRatiosScore" Size = 1 readonly></td>
					    </tr>
						<tr><td colspan = 6>____________________________________________________________________________________________</td></tr>
				       <tr></tr>
						<tr style = "background-color:lightgrey">
					        <td><strong>Profitability Ratios </strong></td>
					    </tr>
					    <tr align = center>
					        <td align = left>Gross Profit Ratio</td>
						    <td><input class = "price" type = text name = "GrossProfitMarginWeight" onchange = "RecalculateProfitabilityRatios(this)" Size = 1</td>
							<td><input type = text name = "bfGrossProfitMarginEffectiveWeight" Size = 1 readonly>%</td>
						    <td><input type = text name = "sfGrossProfitMarginEffectiveWeight" Size = 1 readonly>%</td>
							<td><input type = text name = "bfGrossProfitMarginScore" Size = 1 readonly></td>
							<td><input type = text name = "sfGrossProfitMarginScore" Size = 1 readonly></td>
					    </tr>
					    <tr align = center>
					         <td align = left>Operating Profit Margin</td>
						     <td><input class = "price" type = text name = "OperatingProfitMarginWeight" Size = 1 onchange = "RecalculateProfitabilityRatios(this)"></td>
							 <td><input type = text name = "bfOperatingProfitMarginEffectiveWeight" Size = 1 readonly>%</td>
							 <td><input type = text name = "sfOperatingProfitMarginEffectiveWeight" Size = 1 readonly>%</td>
							 <td><input type = text name = "bfOperatingProfitMarginScore" Size = 1 readonly></td>
							 <td><input type = text name = "sfOperatingProfitMarginScore" Size = 1 readonly></td>
					    </tr>
					    <tr align = center>
	                         <td align = left>Turnover Growth</td>
						     <td><input class = "price" type = text name = "TurnoverGrowthWeight" Size = 1 onchange = "RecalculateProfitabilityRatios(this)"></td>
							 <td><input type = text name = "bfTurnoverGrowthEffectiveWeight" Size = 1 readonly>%</td>
							 <td><input type = text name = "sfTurnoverGrowthEffectiveWeight" Size = 1 readonly>%</td>
							 <td><input type = text name = "bfTurnoverGrowthScore" Size = 1 readonly></td>
							 <td><input type = text name = "sfTurnoverGrowthScore" Size = 1 readonly></td>
						</tr>
						<tr align = center>
	                         <td align = left>Return On Assets</td>
						     <td><input class = "price" type = text name = "ReturnOnAssetsWeight" Size = 1 onchange = "RecalculateProfitabilityRatios(this)"></td>
							 <td><input type = text name = "bfReturnOnAssetsEffectiveWeight" Size = 1 readonly>%</td>
							 <td><input type = text name = "sfReturnOnAssetsEffectiveWeight" Size = 1 readonly>%</td>
							 <td><input type = text name = "bfReturnOnAssetsScore" Size = 1 readonly></td>
							 <td><input type = text name = "sfReturnOnAssetsScore" Size = 1 readonly></td>
						</tr>
						<tr align = center>
	                         <td align = left>Return On Investments (Balancing)</td>
						     <td><input type = text name = "ReturnOnInvestmentsWeight" Size = 1 readonly></td>
							 <td><input type = text name = "bfReturnOnInvestmentsEffectiveWeight" Size = 1 readonly>%</td>
							 <td><input type = text name = "sfReturnOnInvestmentsEffectiveWeight" Size = 1 readonly>%</td>
							 <td><input type = text name = "bfReturnOnInvestmentsScore" Size = 1 readonly></td>
							 <td><input type = text name = "sfReturnOnInvestmentsScore" Size = 1 readonly></td>
						</tr>
					    <tr align = center>
					         <td align = left>TOTAL</td>
						     <td>
						         <input type = text name = "TotalProfitabilityRatiosWeight" value = 100 Size = 1 readonly">
								 <td><input type = text name = "bfTotalProfitabilityRatiosEffectiveWeight" Size = 1 readonly>%</td>
								 <td><input type = text name = "sfTotalProfitabilityRatiosEffectiveWeight" Size = 1 readonly>%</td>
							     <td><input type = text name = "bfTotalProfitabilityRatiosScore" Size = 1 readonly></td>
							     <td><input type = text name = "sfTotalProfitabilityRatiosScore" Size = 1 readonly></td>
						     </td>
					    </tr>
					<tr><td colspan = 6>____________________________________________________________________________________________</td></tr>
				           <tr></tr>
						<tr style = "background-color:lightgrey">
					        <td><strong>Capital Structure Ratios </strong></td>
					    </tr>
					    <tr align = center>
					        <td align = left>Debt/Equity</td>
						    <td><input class = "price" type = text name = "DebtToEquityWeight" Size = 1 onchange = "RecalculateCapitalStructureRatios(this)"></td>
							<td><input type = text name = "bfDebtToEquityEffectiveWeight" Size = 1 readonly>%</td>
							<td><input type = text name = "sfDebtToEquityEffectiveWeight" Size = 1 readonly>%</td>
							<td><input type = text name = "bfDebtToEquityScore" Size = 1 readonly></td>
							<td><input type = text name = "sfDebtToEquityScore" Size = 1 readonly></td>
					    </tr>
					    <tr align = center>
					         <td align = left>Debt/Tangible Net Worth</td>
						     <td><input class = "price" type = text name = "DebtToTangibleNetWorthWeight" Size = 1 onchange = "RecalculateCapitalStructureRatios(this)"</td>
							 <td><input type = text name = "bfDebtToTangibleNetWorthEffectiveWeight" Size = 1 readonly>%</td>
							 <td><input type = text name = "sfDebtToTangibleNetWorthEffectiveWeight" Size = 1 readonly>%</td>
							 <td><input type = text name = "bfDebtToTangibleNetWorthScore" Size = 1 readonly></td>
							 <td><input type = text name = "sfDebtToTangibleNetWorthScore" Size = 1 readonly></td>
					    </tr>
					    <tr align =center>
					         <td align = left>Shareholders Funds/Total Assets(Balancing)</td>     
						     <td><input type = text name = "ShareholdersFundsToTotalAssetsWeight" Size = 1 readonly</td>
							 <td><input type = text name = "bfShareholdersFundsToTotalAssetsEffectiveWeight" Size = 1 readonly>%</td>
							 <td><input type = text name = "sfShareholdersFundsToTotalAssetsEffectiveWeight" Size = 1 readonly>%</td>
							 <td><input type = text name = "bfShareholdersFundsToTotalAssetsScore" Size = 1 readonly></td>
							 <td><input type = text name = "sfShareholdersFundsToTotalAssetsScore" Size = 1 readonly></td>
					    </tr>
					 
						<tr align = center>
					         <td align = left>TOTAL</td>
						     <td><input type = text name = "TotalCapitalStructureRatiosWeight" Size = 1 value = 100></td>
							 <td><input type = text name = "bfTotalCapitalStructureRatiosEffectiveWeight" Size = 1>%</td>
							 <td><input type = text name = "sfTotalCapitalStructureRatiosEffectiveWeight" Size = 1>%</td>
							 <td><input type = text name = "bfTotalCapitalStructureRatiosScore" Size = 1 readonly></td>  
							 <td><input type = text name = "sfTotalCapitalStructureRatiosScore" Size = 1 readonly></td>  
					    </tr>
					<tr><td colspan = 6>____________________________________________________________________________________________</td></tr>
							<tr style = "background-color:lightgrey">
					        <td><strong>Debt Service Ratios </strong></td>
					    </tr>
					    <tr align = center>
					        <td align = left>Interest Cover</td>
						    <td><input class = "price" type = text name = "InterestCoverWeight" Size = 1 onchange = "RecalculateDebtServiceRatios(this)"></td>
							<td><input type = text name = "bfInterestCoverEffectiveWeight" Size = 1>%</td>
							<td><input type = text name = "sfInterestCoverEffectiveWeight" Size = 1>%</td>
							<td><input type = text name = "bfInterestCoverScore" Size = 1></td>
							<td><input type = text name = "sfInterestCoverScore" Size = 1></td>
					    </tr>
					    <tr align = center>
					         <td align = left>EBITDA/Gross Interest Earning Debts (Balancing)</td>
						     <td><input type = text name = "EBITDAToGrossIntDebtsWeight" Size = 1 readonly></td>
							 <td><input type = text name = "bfEBITDAToGrossIntDebtsEffectiveWeight" Size = 1 readonly>%</td>
							 <td><input type = text name = "sfEBITDAToGrossIntDebtsEffectiveWeight" Size = 1 readonly>%</td>
							 <td><input type = text name = "bfEBITDAToGrossIntDebtsScore" Size = 1 readonly></td>
							 <td><input type = text name = "sfEBITDAToGrossIntDebtsScore" Size = 1 readonly></td>
					    </tr>
					    <tr align = center>
					         <td align = left>TOTAL</td>
						     <td><input type = text name = "TotalDebtServiceRatiosWeight" Size = 1 value = 100 readonly></td>
							 <td><input type = text name = "bfTotalDebtServiceRatiosEffectiveWeight" Size = 1 readonly>%</td>
							 <td><input type = text name = "sfTotalDebtServiceRatiosEffectiveWeight" Size = 1 readonly>%</td>
							 <td><input type = text name = "bfTotalDebtServiceRatiosScore" Size = 1 readonly></td>
							 <td><input type = text name = "sfTotalDebtServiceRatiosScore" Size = 1 readonly></td>
					    </tr>
					    <tr>
		                    <td><input name = "username" type = hidden></td>
 			            </tr>
			  
					</td>
			      </table>
			</td>
			 
			
		  </tr> 
		</Table> 
		  </td></td>              
	  </tr>
	 
   </Table>
   </form>
</body>

</html>